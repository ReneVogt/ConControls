<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ConControls</name>
    </assembly>
    <members>
        <member name="T:ConControls.Controls.BorderStyle">
            <summary>
            Border styles for <see cref="T:ConControls.Controls.IConsoleWindow"/> instances and
            <see cref="T:ConControls.Controls.ConsoleControl"/>s.
            </summary>
        </member>
        <member name="F:ConControls.Controls.BorderStyle.None">
            <summary>
            The control has no border.
            </summary>
        </member>
        <member name="F:ConControls.Controls.BorderStyle.SingleLined">
            <summary>
            The control has a single-lined border.
            </summary>
        </member>
        <member name="F:ConControls.Controls.BorderStyle.DoubleLined">
            <summary>
            The control has a double-lined border.
            </summary>
        </member>
        <member name="F:ConControls.Controls.BorderStyle.Bold">
            <summary>
            The control has a bold-lined border.
            </summary>
        </member>
        <member name="T:ConControls.Controls.Button">
            <summary>
            A button control.
            </summary>
        </member>
        <member name="E:ConControls.Controls.Button.Click">
            <summary>
            Raised when the button gets clicked.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Button.TabStop">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.Button.CanFocus">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.Button.Text">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.Button.CursorVisible">
            <inheritdoc />
        </member>
        <member name="M:ConControls.Controls.Button.#ctor(ConControls.Controls.IConsoleWindow)">
            <summary>
            Creates a new instance of a <see cref="T:ConControls.Controls.Button"/>.
            </summary>
            <param name="window">The <see cref="T:ConControls.Controls.IConsoleWindow"/> this control should belong to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="window"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ConControls.Controls.Button.PerformClick">
            <summary>
            Performs a button click (if the control is <see cref="P:ConControls.Controls.ConsoleControl.Enabled"/>).
            </summary>
        </member>
        <member name="M:ConControls.Controls.Button.OnKeyEvent(ConControls.Controls.KeyEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:ConControls.Controls.Button.OnMouseClick(ConControls.Controls.MouseEventArgs)">
            <inheritdoc />
        </member>
        <member name="T:ConControls.Controls.ConsoleControl">
            <summary>
            Base class for all console controls.
            </summary>
            <threadsafety>
            All public properties and methods of this class are synchronized using the
            <see cref="P:ConControls.Controls.IConsoleWindow.SynchronizationLock"/> of the control's <see cref="P:ConControls.Controls.ConsoleControl.Window"/>.<br/>
            When inheriting custom controls, this pattern of synchronizing to the window's synchronization object
            should be applied.
            </threadsafety>
        </member>
        <member name="E:ConControls.Controls.ConsoleControl.EnabledChanged">
            <summary>
            Raised when the <see cref="P:ConControls.Controls.ConsoleControl.Enabled"/> property has been changed.
            </summary>
        </member>
        <member name="E:ConControls.Controls.ConsoleControl.VisibleChanged">
            <summary>
            The <see cref="P:ConControls.Controls.ConsoleControl.Visible"/> property of the control has been changed.
            </summary>
        </member>
        <member name="E:ConControls.Controls.ConsoleControl.FocusedChanged">
            <summary>
            Raised when the <see cref="P:ConControls.Controls.ConsoleControl.Focused"/> property has been changed.
            </summary>
        </member>
        <member name="E:ConControls.Controls.ConsoleControl.AreaChanged">
            <summary>
            The <see cref="P:ConControls.Controls.ConsoleControl.Area"/> of the control has been changed.
            </summary>
        </member>
        <member name="E:ConControls.Controls.ConsoleControl.ParentChanged">
            <summary>
            The <see cref="P:ConControls.Controls.ConsoleControl.Parent"/> of the control has been changed.
            </summary>
        </member>
        <member name="E:ConControls.Controls.ConsoleControl.NameChanged">
            <summary>
            The <see cref="P:ConControls.Controls.ConsoleControl.Name"/> of the control has been changed.
            </summary>
        </member>
        <member name="E:ConControls.Controls.ConsoleControl.CursorPositionChanged">
            <summary>
            The <see cref="P:ConControls.Controls.ConsoleControl.CursorPosition"/> of the control has been changed.
            </summary>
        </member>
        <member name="E:ConControls.Controls.ConsoleControl.CursorSizeChanged">
            <summary>
            The <see cref="P:ConControls.Controls.ConsoleControl.CursorSize"/> of the control has been changed.
            </summary>
        </member>
        <member name="E:ConControls.Controls.ConsoleControl.CursorVisibleChanged">
            <summary>
            The <see cref="P:ConControls.Controls.ConsoleControl.CursorVisible"/> of the control has been changed.
            </summary>
        </member>
        <member name="E:ConControls.Controls.ConsoleControl.MouseLeave">
            <summary>
            The mouse has left the control's area.
            </summary>
            <remarks>
            The <see cref="P:ConControls.Controls.MouseEventArgs.Position"/> property of the arguments contains the mouse position in client coordinates (relative to the control's client area).
            </remarks>
        </member>
        <member name="E:ConControls.Controls.ConsoleControl.MouseEnter">
            <summary>
            The mouse has entered the control's area.
            </summary>
            <remarks>
            The <see cref="P:ConControls.Controls.MouseEventArgs.Position"/> property of the arguments contains the mouse position in client coordinates (relative to the control's client area).
            </remarks>
        </member>
        <member name="E:ConControls.Controls.ConsoleControl.MouseMove">
            <summary>
            The mouse has been moved inside the control's area.
            </summary>
            <remarks>
            The <see cref="P:ConControls.Controls.MouseEventArgs.Position"/> property of the arguments contains the mouse position in client coordinates (relative to the control's client area).
            </remarks>
        </member>
        <member name="E:ConControls.Controls.ConsoleControl.MouseClick">
            <summary>
            The mouse has been clicked inside the control's area.
            </summary>
            <remarks>
            The <see cref="P:ConControls.Controls.MouseEventArgs.Position"/> property of the arguments contains the mouse position in client coordinates (relative to the control's client area).
            </remarks>
        </member>
        <member name="E:ConControls.Controls.ConsoleControl.MouseDoubleClick">
            <summary>
            The mouse has been double-clicked inside the control's area.
            </summary>
            <remarks>
            The <see cref="P:ConControls.Controls.MouseEventArgs.Position"/> property of the arguments contains the mouse position in client coordinates (relative to the control's client area).
            </remarks>
        </member>
        <member name="E:ConControls.Controls.ConsoleControl.MouseScroll">
            <summary>
            The mouse wheel has been used inside the control's area.
            </summary>
            <remarks>
            The <see cref="P:ConControls.Controls.MouseEventArgs.Position"/> property of the arguments contains the mouse position in client coordinates (relative to the control's client area).
            </remarks>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.Window">
            <summary>
            The <see cref="T:ConControls.Controls.IConsoleWindow"/> that contains this control.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.Parent">
            <summary>
            The parent <see cref="T:ConControls.Controls.ConsoleControl"/> that contains this control.
            The parent must be contained by the same <see cref="T:ConControls.Controls.IConsoleWindow"/>.
            If this propery is <c>null</c>, the control is not displayed.
            </summary>
            <exception cref="T:System.InvalidOperationException">The parent is not part of the same <see cref="T:ConControls.Controls.IConsoleWindow"/> or this control is the root element of the window..</exception>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.Controls">
            <summary>
            The collection of <see cref="T:ConControls.Controls.ConsoleControl"/>s contained by this control.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.Name">
            <summary>
            Gets or sets the name of this control.
            If this is set to <c>null</c> or an empty or whitespace-only string, the name will
            be set to the name of the control's type.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.Tag">
            <summary>
            Gets or sets a tag object for this control.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.DrawingInhibited">
            <summary>
            Determines if the control can currently be redrawn, depending on calls to <see cref="M:ConControls.Controls.ConsoleControl.DeferDrawing"/>
            to this control or its parents.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.Enabled">
            <summary>
            Gets or sets wether the control is enabled or not.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.Visible">
            <summary>
            Gets or sets wether the control should be visible (drawn) or not.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.Focused">
            <summary>
            Gets or sets wether this control is focused or not.
            Trying to set this to <c>true</c> though <see cref="P:ConControls.Controls.ConsoleControl.CanFocus"/> returns <c>false</c>
            throws an <see cref="T:System.InvalidOperationException"/>.
            </summary>
            <exception cref="T:System.InvalidOperationException"><see cref="P:ConControls.Controls.ConsoleControl.Focused"/> cannot be set to <c>true</c> when <see cref="P:ConControls.Controls.ConsoleControl.CanFocus"/> returns <c>false</c>.</exception>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.CanFocus">
            <summary>
            Gets or sets wether this control can be focused or not.
            </summary>
            <remarks>
            The setter of this property has no effect. It should be overwritten in derived controls that support focus.</remarks>
            <returns><c>true</c> if this control can take focues, <c>false</c> if not.</returns>
            <exception cref="T:System.NotSupportedException">This property cannot be set for this control type.</exception>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.TabOrder">
            <summary>
            Gets or sets a number indicating the control's position in the Tab order.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.TabStop">
            <summary>
            Gets or sets wether this control will be focused when using the Tab key to step through the window.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.Area">
            <summary>
            The effective total area of the control.
            This is the area the control effectivly fills in the console screen buffer
            after applying layout and including borders.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.Location">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.Size">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.ForegroundColor">
            <summary>
            Gets or sets the <see cref="T:System.ConsoleColor"/> to use for foreground drawings.
            </summary>
            <remarks>
            <para>If this property is <c>null</c> it defaults to the <see cref="P:ConControls.Controls.ConsoleControl.Parent"/>'s value or finally to the windows <see cref="P:ConControls.Controls.IConsoleWindow.DefaultForegroundColor"/>.</para>
            </remarks>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.FocusedForegroundColor">
            <summary>
            Gets or sets the <see cref="T:System.ConsoleColor"/> to use for foreground drawings when the control is focused.
            If this is <c>null</c>, the <see cref="P:ConControls.Controls.ConsoleControl.ForegroundColor"/> value will be used.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.DisabledForegroundColor">
            <summary>
            Gets or sets the <see cref="T:System.ConsoleColor"/> to use for foreground drawings when the control is disabled.
            If this is <c>null</c>, the <see cref="P:ConControls.Controls.ConsoleControl.ForegroundColor"/> value will be used.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.BackgroundColor">
            <summary>
            Gets or sets the <see cref="T:System.ConsoleColor"/> to use for the background of this control.
            </summary>
            <remarks>
            <para>If this property is <c>null</c> it defaults to the <see cref="P:ConControls.Controls.ConsoleControl.Parent"/>'s value or finally to the windows <see cref="P:ConControls.Controls.IConsoleWindow.DefaultBackgroundColor"/>.</para>
            </remarks>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.FocusedBackgroundColor">
            <summary>
            Gets or sets the <see cref="T:System.ConsoleColor"/> to use for the background of this control
            when it is focused.
            If this is <c>null</c>, the <see cref="P:ConControls.Controls.ConsoleControl.BackgroundColor"/> value will be used.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.DisabledBackgroundColor">
            <summary>
            Gets or sets the <see cref="T:System.ConsoleColor"/> to use for the background of this control
            when it is disabled.
            If this is <c>null</c>, the <see cref="P:ConControls.Controls.ConsoleControl.BackgroundColor"/> value will be used.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.BorderColor">
            <summary>
            Gets or sets the <see cref="T:System.ConsoleColor"/> to use for the border of this control.
            </summary>
            <remarks>
            <para>If this property is <c>null</c> it defaults to the <see cref="P:ConControls.Controls.ConsoleControl.Parent"/>'s value or finally to the windows <see cref="P:ConControls.Controls.IConsoleWindow.DefaultBorderColor"/>.</para>
            </remarks>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.FocusedBorderColor">
            <summary>
            Gets or sets the <see cref="T:System.ConsoleColor"/> to use for the border of this control
            when it is focused.
            If this is <c>null</c>, the <see cref="P:ConControls.Controls.ConsoleControl.BorderColor"/> value will be used.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.DisabledBorderColor">
            <summary>
            Gets or sets the <see cref="T:System.ConsoleColor"/> to use for the border of this control
            when it is disabled.
            If this is <c>null</c>, the <see cref="P:ConControls.Controls.ConsoleControl.BorderColor"/> value will be used.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.BorderStyle">
            <summary>
            Gets or sets the <see cref="P:ConControls.Controls.ConsoleControl.BorderStyle"/> of this control.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.FocusedBorderStyle">
            <summary>
            Gets or sets the <see cref="T:ConControls.Controls.BorderStyle"/> of this control
            when it is focused.
            If this is <c>null</c>, the <see cref="P:ConControls.Controls.ConsoleControl.BorderStyle"/> value will be used.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.DisabledBorderStyle">
            <summary>
            Gets or sets the <see cref="T:ConControls.Controls.BorderStyle"/> of this control
            when it is disabled.
            If this is <c>null</c>, the <see cref="P:ConControls.Controls.ConsoleControl.BorderStyle"/> value will be used.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.CursorPosition">
            <summary>
            Gets or sets the cursor position for this control in character coordinates of the console
            screen buffer.
            </summary>
            <remarks>
            This property is only used by the <see cref="T:ConControls.Controls.IConsoleWindow"/> if this control is currently
            focused.
            </remarks>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.CursorSize">
            <summary>
            Gets or sets the cursor size for this control.
            </summary>
            <remarks>
            <para>
            This value describes the size of the text cursor. It should be between <c>zero</c> and <c>100</c>.
            </para>
            <para>
            This property is only used by the <see cref="T:ConControls.Controls.IConsoleWindow"/> if this control is
            currently focused.
            </para>
            <para>If this property is <c>null</c> it defaults to the <see cref="P:ConControls.Controls.ConsoleControl.Parent"/>'s value or finally to the windows <see cref="P:ConControls.Controls.IConsoleWindow.DefaultCursorSize"/>.</para>
            </remarks>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.CursorVisible">
            <summary>
            Gets or sets wether the cursor is visible on this control.
            screen buffer.
            </summary>
            <remarks>
            This property is only used by the <see cref="T:ConControls.Controls.IConsoleWindow"/> if this control is
            currently focused.
            </remarks>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.#ctor(ConControls.Controls.IConsoleWindow)">
            <summary>
            Initializes an instance of <see cref="T:ConControls.Controls.ConsoleControl"/>.
            </summary>
            <param name="window">The <see cref="T:ConControls.Controls.IConsoleWindow"/> this control should belong to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="window"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.Dispose">
            <summary>
            Disposes of any used resources and disconnects from the <see cref="P:ConControls.Controls.ConsoleControl.Window"/>.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.Dispose(System.Boolean)">
            <summary>
            Disposes of any used resources and disconnects from the <see cref="P:ConControls.Controls.ConsoleControl.Window"/>.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.CheckDisposed">
            <summary>
            Checks if the <see cref="T:ConControls.Controls.IConsoleWindow"/> containing this control has already
            been disposed of and throws an <see cref="T:System.ObjectDisposedException"/> if it is.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The containing <see cref="T:ConControls.Controls.IConsoleWindow"/> has already been disposed of.</exception>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.Clear">
            <summary>
            Clears (resets states) in derived controls.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.PointToConsole(System.Drawing.Point)">
            <inheritdoc />
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.PointToClient(System.Drawing.Point)">
            <inheritdoc />
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.Invalidate(System.Boolean)">
            <summary>
            Invalidates this control to trigger redrawing.
            If <paramref name="onlyClientArea"/> is <c>true</c>, only
            the client area (without borders) will be invalidated.
            </summary>
            <param name="onlyClientArea">Set this to <c>true</c> if only the client area should be redrawn.
            This avoids drawing the border and background.</param>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.Draw(ConControls.Controls.Drawing.IConsoleGraphics)">
            <summary>
            Draws the control onto the console screen buffer.
            When overwriting this method, make sure to use the <see cref="P:ConControls.Controls.IConsoleWindow.SynchronizationLock"/>
            to synchronize threads and to call <see cref="M:ConControls.Controls.ConsoleControl.CheckDisposed"/> to check if the window has not yet
            been disposed of.
            The <paramref name="graphics"/> buffer should be flushed by the caller.
            </summary>
            <param name="graphics">An <see cref="T:ConControls.Controls.Drawing.IConsoleGraphics"/> that performs the drawing operations on
            the screen buffer.</param>
            <exception cref="T:System.ObjectDisposedException">The containing <see cref="T:ConControls.Controls.IConsoleWindow"/> has already been disposed of.</exception>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.DrawBackground(ConControls.Controls.Drawing.IConsoleGraphics)">
            <summary>
            Draws the background onto the console screen buffer.
            When overwriting this method, make sure to use the <see cref="P:ConControls.Controls.IConsoleWindow.SynchronizationLock"/>
            to synchronize threads and to call <see cref="M:ConControls.Controls.ConsoleControl.CheckDisposed"/> to check if the window has not yet
            been disposed of.
            The <paramref name="graphics"/> buffer should be flushed by the caller.
            </summary>
            <param name="graphics">An <see cref="T:ConControls.Controls.Drawing.IConsoleGraphics"/> that performs the drawing operations on
            the screen buffer.</param>
            <exception cref="T:System.ObjectDisposedException">The containing <see cref="T:ConControls.Controls.IConsoleWindow"/> has already been disposed of.</exception>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.DrawBorder(ConControls.Controls.Drawing.IConsoleGraphics)">
            <summary>
            Draws the border of the control onto the console screen buffer and returns the remaining client area.
            When overwriting this method, make sure to use the <see cref="P:ConControls.Controls.IConsoleWindow.SynchronizationLock"/>
            to synchronize threads and to call <see cref="M:ConControls.Controls.ConsoleControl.CheckDisposed"/> to check if the window has not yet
            been disposed of.
            The <paramref name="graphics"/> buffer should be flushed by the caller.
            </summary>
            <param name="graphics">An <see cref="T:ConControls.Controls.Drawing.IConsoleGraphics"/> that performs the drawing operations on
            the screen buffer.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle"/> representing the available client area.</returns>
            <exception cref="T:System.ObjectDisposedException">The containing <see cref="T:ConControls.Controls.IConsoleWindow"/> has already been disposed of.</exception>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.DrawClientArea(ConControls.Controls.Drawing.IConsoleGraphics)">
            <summary>
            Draws the client area and child controls onto the console screen buffer.
            When overwriting this method, make sure to use the <see cref="P:ConControls.Controls.IConsoleWindow.SynchronizationLock"/>
            to synchronize threads and to call <see cref="M:ConControls.Controls.ConsoleControl.CheckDisposed"/> to check if the window has not yet
            been disposed of.
            The <paramref name="graphics"/> buffer should be flushed by the caller.
            </summary>
            <param name="graphics">An <see cref="T:ConControls.Controls.Drawing.IConsoleGraphics"/> that performs the drawing operations on
            the screen buffer.</param>
            <exception cref="T:System.ObjectDisposedException">The containing <see cref="T:ConControls.Controls.IConsoleWindow"/> has already been disposed of.</exception>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.DeferDrawing">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.EffectiveForegroundColor">
            <summary>
            Gets the current foreground color based on the state of <see cref="P:ConControls.Controls.ConsoleControl.Enabled"/> and <see cref="P:ConControls.Controls.ConsoleControl.Focused"/> properties.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.EffectiveBackgroundColor">
            <summary>
            Gets the current background color based on the state of <see cref="P:ConControls.Controls.ConsoleControl.Enabled"/> and <see cref="P:ConControls.Controls.ConsoleControl.Focused"/> properties.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.EffectiveBorderColor">
            <summary>
            Gets the current border color based on the state of <see cref="P:ConControls.Controls.ConsoleControl.Enabled"/> and <see cref="P:ConControls.Controls.ConsoleControl.Focused"/> properties.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.EffectiveBorderStyle">
            <summary>
            Gets the current border style based on the state of <see cref="P:ConControls.Controls.ConsoleControl.Enabled"/> and <see cref="P:ConControls.Controls.ConsoleControl.Focused"/> properties.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.GetClientArea">
            <summary>
            Determines the area of the control that can be used as "client" area.
            This base method e.g. removes the border from the total control area.
            The resulting coordinates are client coordinates (not console coordinates)
            </summary>
            <returns>A <see cref="T:System.Drawing.Rectangle"/> representing the client area (in client coordinates) of this control.</returns>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnParentChanged">
            <summary>
            Called when the <see cref="P:ConControls.Controls.ConsoleControl.Parent"/> has changed.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnNameChanged">
            <summary>
            Called when the <see cref="P:ConControls.Controls.ConsoleControl.Name"/> has changed.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnEnabledChanged">
            <summary>
            Called when the <see cref="P:ConControls.Controls.ConsoleControl.Enabled"/> property of this control has been changed.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnVisibleChanged">
            <summary>
            Called when the <see cref="P:ConControls.Controls.ConsoleControl.Visible"/> property of this control has been changed.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnCursorPositionChanged">
            <summary>
            Called when the <see cref="P:ConControls.Controls.ConsoleControl.CursorPosition"/> property of this control has been changed.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnCursorSizeChanged">
            <summary>
            Called when the <see cref="P:ConControls.Controls.ConsoleControl.CursorPosition"/> property of this control has been changed.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnCursorVisibleChanged">
            <summary>
            Called when the <see cref="P:ConControls.Controls.ConsoleControl.CursorPosition"/> property of this control has been changed.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnFocusedChanged">
            <summary>
            Called when the <see cref="P:ConControls.Controls.ConsoleControl.Focused"/> property of this control has been changed.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnForegroundColorChanged">
            <summary>
            Called when the <see cref="P:ConControls.Controls.ConsoleControl.ForegroundColor"/>, <see cref="P:ConControls.Controls.ConsoleControl.FocusedForegroundColor"/> or
            <see cref="P:ConControls.Controls.ConsoleControl.DisabledForegroundColor"/> of this control have been changed.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnBackgroundColorChanged">
            <summary>
            Called when the <see cref="P:ConControls.Controls.ConsoleControl.BackgroundColor"/>, <see cref="P:ConControls.Controls.ConsoleControl.FocusedBackgroundColor"/> or
            <see cref="P:ConControls.Controls.ConsoleControl.DisabledBackgroundColor"/> of this control have been changed.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnBorderColorChanged">
            <summary>
            Called when the <see cref="P:ConControls.Controls.ConsoleControl.BorderColor"/>, <see cref="P:ConControls.Controls.ConsoleControl.FocusedBorderColor"/> or
            <see cref="P:ConControls.Controls.ConsoleControl.DisabledBorderColor"/> of this control have been changed.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnBorderStyleChanged">
            <summary>
            Called when the <see cref="P:ConControls.Controls.ConsoleControl.BorderStyle"/>, <see cref="P:ConControls.Controls.ConsoleControl.FocusedBorderStyle"/> or
            <see cref="P:ConControls.Controls.ConsoleControl.DisabledBorderStyle"/> of this control have been changed.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnAreaChanged">
            <summary>
            Called when the <see cref="P:ConControls.Controls.ConsoleControl.Area"/> of this control has been changed.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnKeyEvent(ConControls.Controls.KeyEventArgs)">
            <summary>
            Called when a <see cref="E:ConControls.Controls.IConsoleWindow.KeyEvent"/> has been received and this control is visible, enabled and owns the focus.
            </summary>
            <param name="e">The event details.</param>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnMouseLeave(ConControls.Controls.MouseEventArgs)">
            <summary>
            Called when the mouse has left the control's area.
            </summary>
            <param name="e">The <see cref="T:ConControls.Controls.MouseEventArgs"/> containing information (in client coordinates) about the event.</param>
            <remarks>
            <para>
            This method is called when the <see cref="T:ConControls.Controls.ConsoleControl"/>'s event handler for the <see cref="P:ConControls.Controls.ConsoleControl.Window"/>'s <see cref="E:ConControls.Controls.IConsoleWindow.MouseEvent"/> detects
            that the mouse has left the control's area.
            </para>
            <para>
            The <see cref="P:ConControls.Controls.MouseEventArgs.Position"/> property of the arguments <paramref name="e"/> contains the mouse position in client coordinates (relative to the control's client area).
            </para>
            </remarks>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnMouseEnter(ConControls.Controls.MouseEventArgs)">
            <summary>
            Called when the mouse has entered the control's area.
            </summary>
            <param name="e">The <see cref="T:ConControls.Controls.MouseEventArgs"/> containing information (in client coordinates) about the event.</param>
            <remarks>
            <para>
            This method is called when the <see cref="T:ConControls.Controls.ConsoleControl"/>'s event handler for the <see cref="P:ConControls.Controls.ConsoleControl.Window"/>'s <see cref="E:ConControls.Controls.IConsoleWindow.MouseEvent"/> detects
            that the mouse has entered the control's area.
            </para>
            <para>
            The <see cref="P:ConControls.Controls.MouseEventArgs.Position"/> property of the arguments <paramref name="e"/> contains the mouse position in client coordinates (relative to the control's client area).
            </para>
            </remarks>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnMouseMove(ConControls.Controls.MouseEventArgs)">
            <summary>
            Called when the mouse has been moved inside the control's area.
            </summary>
            <param name="e">The <see cref="T:ConControls.Controls.MouseEventArgs"/> containing information (in client coordinates) about the event.</param>
            <remarks>
            <para>
            This method is called when the <see cref="T:ConControls.Controls.ConsoleControl"/>'s event handler for the <see cref="P:ConControls.Controls.ConsoleControl.Window"/>'s <see cref="E:ConControls.Controls.IConsoleWindow.MouseEvent"/> detects
            that the mouse has been moved inside the control's area.
            </para>
            <para>
            The <see cref="P:ConControls.Controls.MouseEventArgs.Position"/> property of the arguments <paramref name="e"/> contains the mouse position in client coordinates (relative to the control's client area).
            </para>
            </remarks>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnMouseClick(ConControls.Controls.MouseEventArgs)">
            <summary>
            Called when the mouse has been clicked inside the control's area.
            </summary>
            <param name="e">The <see cref="T:ConControls.Controls.MouseEventArgs"/> containing information (in client coordinates) about the event.</param>
            <remarks>
            <para>
            This method is called when the <see cref="T:ConControls.Controls.ConsoleControl"/>'s event handler for the <see cref="P:ConControls.Controls.ConsoleControl.Window"/>'s <see cref="E:ConControls.Controls.IConsoleWindow.MouseEvent"/> detects
            that the mouse has been clicked inside the control's area.
            </para>
            <para>
            The <see cref="P:ConControls.Controls.MouseEventArgs.Position"/> property of the arguments <paramref name="e"/> contains the mouse position in client coordinates (relative to the control's client area).
            </para>
            </remarks>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnMouseDoubleClick(ConControls.Controls.MouseEventArgs)">
            <summary>
            Called when the mouse has been double-clicked inside the control's area.
            </summary>
            <param name="e">The <see cref="T:ConControls.Controls.MouseEventArgs"/> containing information (in client coordinates) about the event.</param>
            <remarks>
            <para>
            This method is called when the <see cref="T:ConControls.Controls.ConsoleControl"/>'s event handler for the <see cref="P:ConControls.Controls.ConsoleControl.Window"/>'s <see cref="E:ConControls.Controls.IConsoleWindow.MouseEvent"/> detects
            that the mouse has been double clicked inside the control's area.
            </para>
            <para>
            The <see cref="P:ConControls.Controls.MouseEventArgs.Position"/> property of the arguments <paramref name="e"/> contains the mouse position in client coordinates (relative to the control's client area).
            </para>
            </remarks>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnMouseScroll(ConControls.Controls.MouseEventArgs)">
            <summary>
            Called when the mouse wheel has been used inside the control's area.
            </summary>
            <param name="e">The <see cref="T:ConControls.Controls.MouseEventArgs"/> containing information (in client coordinates) about the event.</param>
            <remarks>
            <para>
            This method is called when the <see cref="T:ConControls.Controls.ConsoleControl"/>'s event handler for the <see cref="P:ConControls.Controls.ConsoleControl.Window"/>'s <see cref="E:ConControls.Controls.IConsoleWindow.MouseEvent"/> detects
            that the mouse wheel has been used inside the control's area.
            </para>
            <para>
            The <see cref="P:ConControls.Controls.MouseEventArgs.Position"/> property of the arguments <paramref name="e"/> contains the mouse position in client coordinates (relative to the control's client area).
            </para>
            </remarks>
        </member>
        <member name="T:ConControls.Controls.ConsoleWindow">
            <summary>
            The window for a console UI session.
            </summary>
            <remarks>This window takes control over the console input buffer and
            the current screen buffer to provide UI functionality. Only one window
            may be instantiated at a time. Make sure to dispose of any previously
            instantiated contexts before creating a new one.
            </remarks>
            <threadsafety>
            All public properties and methods are sychronized using the window's <see cref="P:ConControls.Controls.ConsoleWindow.SynchronizationLock"/>.
            </threadsafety>
        </member>
        <member name="E:ConControls.Controls.ConsoleWindow.AreaChanged">
            <inheritdoc />
        </member>
        <member name="E:ConControls.Controls.ConsoleWindow.KeyEvent">
            <inheritdoc />
        </member>
        <member name="E:ConControls.Controls.ConsoleWindow.MouseEvent">
            <inheritdoc />
        </member>
        <member name="E:ConControls.Controls.ConsoleWindow.Disposed">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.Window">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.Title">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.Location">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.Size">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.Area">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.ExitCode">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.DefaultForegroundColor">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.DefaultBackgroundColor">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.DefaultBorderColor">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.DefaultCursorSize">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.Controls">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.FocusedControl">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.FrameCharSets">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.SwitchConsoleBuffersKey">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.CloseWindowKey">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.ActiveScreen">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.DrawingInhibited">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.Enabled">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.Visible">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.IsDisposed">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.SynchronizationLock">
            <inheritdoc />
        </member>
        <member name="M:ConControls.Controls.ConsoleWindow.#ctor">
            <summary>
            Opens a new <see cref="T:ConControls.Controls.ConsoleWindow"/>. Only one instance can exist at a time.
            Be sure to dispose of any previously instantiated contexts.
            </summary>
            <exception cref="T:System.InvalidOperationException">A previously instantiated <see cref="T:ConControls.Controls.ConsoleWindow"/> has not yet been disposed of. Only a single window can exist at a time.</exception>
        </member>
        <member name="M:ConControls.Controls.ConsoleWindow.Finalize">
            <summary>
            Cleans up native resources.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleWindow.Dispose">
            <summary>
            Releases any resources used by this <see cref="T:ConControls.Controls.ConsoleWindow"/>.
            </summary>
            <remarks>
            The <see cref="M:ConControls.Controls.ConsoleWindow.Dispose"/> method releases any resources used by this instance.
            It allows to create a new instance (only one <see cref="T:ConControls.Controls.ConsoleWindow"/> instance can be alive
            at a time) and tries to reset the console to the state before the creation of this instacne.</remarks>
        </member>
        <member name="M:ConControls.Controls.ConsoleWindow.Close(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:ConControls.Controls.ConsoleWindow.WaitForCloseAsync">
            <inheritdoc />
        </member>
        <member name="M:ConControls.Controls.ConsoleWindow.PointToClient(System.Drawing.Point)">
            <inheritdoc />
        </member>
        <member name="M:ConControls.Controls.ConsoleWindow.PointToConsole(System.Drawing.Point)">
            <inheritdoc />
        </member>
        <member name="M:ConControls.Controls.ConsoleWindow.GetGraphics">
            <inheritdoc />
        </member>
        <member name="M:ConControls.Controls.ConsoleWindow.Invalidate">
            <summary>
            Invalidates the complete window to trigger a complete redrawing of
            the controls.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleWindow.DeferDrawing">
            <inheritdoc />
        </member>
        <member name="M:ConControls.Controls.ConsoleWindow.FocusNext">
            <inheritdoc />
        </member>
        <member name="M:ConControls.Controls.ConsoleWindow.FocusPrevious">
            <inheritdoc />
        </member>
        <member name="T:ConControls.Controls.ConsoleWindowEventArgs">
            <summary>
            Abstract base class for <see cref="T:System.EventArgs"/> used by the events fired by <see cref="T:ConControls.Controls.IConsoleWindow"/>.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleWindowEventArgs.Handled">
            <summary>
            Gets or sets wether this event has been finally handled and
            no further action is needed.
            </summary>
            <remarks>
            When handling events of an <see cref="T:ConControls.Controls.IConsoleWindow"/> like <seealso cref="E:ConControls.Controls.IConsoleWindow.KeyEvent"/> or
            <seealso cref="E:ConControls.Controls.IConsoleWindow.MouseEvent"/>, set this property to <c>true</c> if you handled that
            event and don't need the infrastructure tu take further care.<br/>
            If you don't handle the event, don't change this property.
            </remarks>
        </member>
        <member name="T:ConControls.Controls.ControlCollection">
            <summary>
            A collection of (child) <see cref="T:ConControls.Controls.ConsoleControl"/>s.
            </summary>
        </member>
        <member name="E:ConControls.Controls.ControlCollection.ControlCollectionChanged">
            <summary>
            Raised when one or more <see cref="T:ConControls.Controls.ConsoleControl"/> instances
            have been added to or removed from this <see cref="T:ConControls.Controls.ControlCollection"/>.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ControlCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ConControls.Controls.ConsoleControl"/> at the given <paramref name="index"/>.
            </summary>
            <param name="index">The index of the <see cref="T:ConControls.Controls.ConsoleControl"/> in this collection.</param>
            <returns>The <see cref="T:ConControls.Controls.ConsoleControl"/> at the given <paramref name="index"/>.</returns>
            <exception cref="T:System.IndexOutOfRangeException">The <paramref name="index"/> was outside this collection.</exception>
        </member>
        <member name="P:ConControls.Controls.ControlCollection.Count">
            <summary>
            Gets the number of controls in this collection.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ControlCollection.Add(ConControls.Controls.ConsoleControl)">
            <summary>
            Adds the given <paramref name="control"/> to the collection.
            </summary>
            <param name="control">The <see cref="T:ConControls.Controls.ConsoleControl"/> to add.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="control"/> is <c>null</c>.</exception>
            <exception cref="T:System.InvalidOperationException">The <paramref name="control"/> uses a different <see cref="T:ConControls.Controls.IConsoleWindow"/> than this collection.</exception>
        </member>
        <member name="M:ConControls.Controls.ControlCollection.AddRange(ConControls.Controls.ConsoleControl[])">
            <summary>
            Adds a sequence of <see cref="T:ConControls.Controls.ConsoleControl"/> instances to the collection.
            </summary>
            <param name="controlsToAdd">The sequence of <see cref="T:ConControls.Controls.ConsoleControl"/> instances to add.</param>
            <exception cref="T:System.InvalidOperationException">One or more controls in <paramref name="controlsToAdd"/> use a different <see cref="T:ConControls.Controls.IConsoleWindow"/> than this collection.</exception>
        </member>
        <member name="M:ConControls.Controls.ControlCollection.AddRange(System.Collections.Generic.IEnumerable{ConControls.Controls.ConsoleControl})">
            <summary>
            Adds a sequence of <see cref="T:ConControls.Controls.ConsoleControl"/> instances to the collection.
            </summary>
            <param name="controlsToAdd">The sequence of <see cref="T:ConControls.Controls.ConsoleControl"/> instances to add.</param>
            <exception cref="T:System.InvalidOperationException">One or more controls in <paramref name="controlsToAdd"/> use a different <see cref="T:ConControls.Controls.IConsoleWindow"/> than this collection.</exception>
        </member>
        <member name="M:ConControls.Controls.ControlCollection.Remove(ConControls.Controls.ConsoleControl)">
            <summary>
            Removes the given <paramref name="control"/> from the collection.
            </summary>
            <param name="control">The <see cref="T:ConControls.Controls.ConsoleControl"/> to remove.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="control"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ConControls.Controls.ControlCollection.RemoveRange(ConControls.Controls.ConsoleControl[])">
            <summary>
            Removes the given sequence of <see cref="T:ConControls.Controls.ConsoleControl"/> instances
            from the collection.
            </summary>
            <param name="controlsToRemove">The sequence of <see cref="T:ConControls.Controls.ConsoleControl"/> instances
            to remove.</param>
        </member>
        <member name="M:ConControls.Controls.ControlCollection.RemoveRange(System.Collections.Generic.IEnumerable{ConControls.Controls.ConsoleControl})">
            <summary>
            Removes the given sequence of <see cref="T:ConControls.Controls.ConsoleControl"/> instances
            from the collection.
            </summary>
            <param name="controlsToRemove">The sequence of <see cref="T:ConControls.Controls.ConsoleControl"/> instances
            to remove.</param>
        </member>
        <member name="M:ConControls.Controls.ControlCollection.IndexOf(ConControls.Controls.ConsoleControl)">
            <summary>
            Determines the index (position) of the <paramref name="control"/> in this collection.
            </summary>
            <param name="control">The control to look for.</param>
            <returns>The index of the <paramref name="control"/> in the collection, or <c>-1</c> if this collection does not contain the control.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="control"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ConControls.Controls.ControlCollection.GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can enumerate the <see cref="T:ConControls.Controls.ConsoleControl"/>
            instances contained in this <see cref="T:ConControls.Controls.ControlCollection"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can enumerate the <see cref="T:ConControls.Controls.ConsoleControl"/>
            instances contained in this <see cref="T:ConControls.Controls.ControlCollection"/>.</returns>
        </member>
        <member name="M:ConControls.Controls.ControlCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.IEnumerator"/> that can enumerate the <see cref="T:ConControls.Controls.ConsoleControl"/>
            instances contained in this <see cref="T:ConControls.Controls.ControlCollection"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> that can enumerate the <see cref="T:ConControls.Controls.ConsoleControl"/>
            instances contained in this <see cref="T:ConControls.Controls.ControlCollection"/>.</returns>
        </member>
        <member name="T:ConControls.Controls.ControlCollectionChangedEventArgs">
            <summary>
            Arguments for the <see cref="E:ConControls.Controls.ControlCollection.ControlCollectionChanged"/> event.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ControlCollectionChangedEventArgs.AddedControls">
            <summary>
            The collection of <see cref="T:ConControls.Controls.ConsoleControl"/> instances that have been added to
            the <see cref="T:ConControls.Controls.ControlCollection"/>.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ControlCollectionChangedEventArgs.RemovedControls">
            <summary>
            The collection of <see cref="T:ConControls.Controls.ConsoleControl"/> instances that have been removed from
            the <see cref="T:ConControls.Controls.ControlCollection"/>.
            </summary>
        </member>
        <member name="T:ConControls.Controls.Drawing.BoldLinedFrameCharSet">
            <summary>
            A <see cref="T:ConControls.Controls.Drawing.FrameCharSet"/> for bold-lined frames.
            </summary>
            <seealso cref="T:ConControls.Controls.Drawing.FrameCharSet"/>
            <seealso cref="T:ConControls.Controls.Drawing.FrameCharSets"/>
            <seealso cref="P:ConControls.Controls.IConsoleWindow.FrameCharSets"/>
        </member>
        <member name="P:ConControls.Controls.Drawing.BoldLinedFrameCharSet.UpperLeft">
            <summary>
            The upper left corner of a bold-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.BoldLinedFrameCharSet.UpperRight">
            <summary>
            The upper right corner of a bold-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.BoldLinedFrameCharSet.LowerLeft">
            <summary>
            The lower left corner of a bold-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.BoldLinedFrameCharSet.LowerRight">
            <summary>
            The lower right corner of a bold-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.BoldLinedFrameCharSet.Horizontal">
            <summary>
            The horizontal line of a bold-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.BoldLinedFrameCharSet.Vertical">
            <summary>
            The vertical line of a bold-lined frame.
            </summary>
        </member>
        <member name="T:ConControls.Controls.Drawing.DoubleLinedFrameCharSet">
            <summary>
            A <see cref="T:ConControls.Controls.Drawing.FrameCharSet"/> for double-lined frames.
            </summary>
            <seealso cref="T:ConControls.Controls.Drawing.FrameCharSet"/>
            <seealso cref="T:ConControls.Controls.Drawing.FrameCharSets"/>
            <seealso cref="P:ConControls.Controls.IConsoleWindow.FrameCharSets"/>
        </member>
        <member name="P:ConControls.Controls.Drawing.DoubleLinedFrameCharSet.UpperLeft">
            <summary>
            The upper left corner of a double-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.DoubleLinedFrameCharSet.UpperRight">
            <summary>
            The upper right corner of a double-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.DoubleLinedFrameCharSet.LowerLeft">
            <summary>
            The lower left corner of a double-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.DoubleLinedFrameCharSet.LowerRight">
            <summary>
            The lower right corner of a double-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.DoubleLinedFrameCharSet.Horizontal">
            <summary>
            The horizontal line of a double-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.DoubleLinedFrameCharSet.Vertical">
            <summary>
            The vertical line of a double-lined frame.
            </summary>
        </member>
        <member name="T:ConControls.Controls.Drawing.FrameCharSet">
            <summary>
            Provides characters for drawing frames.
            </summary>
            <remarks>
            A <see cref="T:ConControls.Controls.Drawing.FrameCharSet"/> represents a character set to use to draw frames
            on the console screen buffer. Each <see cref="T:ConControls.Controls.Drawing.FrameCharSet"/> represents the characters
            used for a <see cref="T:ConControls.Controls.BorderStyle"/>.<br/>
            You can inherit a class from <see cref="T:ConControls.Controls.Drawing.FrameCharSets"/> that provides <see cref="T:ConControls.Controls.Drawing.FrameCharSet"/> instances
            for given <see cref="T:ConControls.Controls.BorderStyle"/> values. This <see cref="T:ConControls.Controls.Drawing.FrameCharSets"/> implementation can then be passed
            to <see cref="P:ConControls.Controls.IConsoleWindow.FrameCharSets">IConsoleWindow.FrameCharSet</see>.
            </remarks>
            <seealso cref="T:ConControls.Controls.Drawing.FrameCharSet"/>
            <seealso cref="P:ConControls.Controls.IConsoleWindow.FrameCharSets"/>
        </member>
        <member name="P:ConControls.Controls.Drawing.FrameCharSet.UpperLeft">
            <summary>
            The upper left corner of a frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.FrameCharSet.UpperRight">
            <summary>
            The upper right corner of a frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.FrameCharSet.LowerLeft">
            <summary>
            The lower left corner of a frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.FrameCharSet.LowerRight">
            <summary>
            The lower right corner of a frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.FrameCharSet.Horizontal">
            <summary>
            The horizontal line of a frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.FrameCharSet.Vertical">
            <summary>
            The vertical line of a frame.
            </summary>
        </member>
        <member name="T:ConControls.Controls.Drawing.FrameCharSets">
            <summary>
            Provides <see cref="T:ConControls.Controls.Drawing.FrameCharSet"/> instances for given <see cref="T:ConControls.Controls.BorderStyle"/> values.
            </summary>
            <remarks>
            You can inherit this class to return your own implementations of <see cref="T:ConControls.Controls.Drawing.FrameCharSet"/>
            classes to change the characters used to draw control frames.
            You can then pass your custom <see cref="T:ConControls.Controls.Drawing.FrameCharSets"/> instance to <see cref="P:ConControls.Controls.IConsoleWindow.FrameCharSets"/>
            to have your custom characters used for frames.<br/>
            This default implementation uses the followig <see cref="T:ConControls.Controls.Drawing.FrameCharSet"/> instances:
            <list type="table">
            <listheader>
            <term><see cref="T:ConControls.Controls.BorderStyle"/></term>
            <description><see cref="T:ConControls.Controls.Drawing.FrameCharSet"/></description>
            </listheader>
            <item>
            <term><see cref="F:ConControls.Controls.BorderStyle.SingleLined"/></term>
            <description><see cref="T:ConControls.Controls.Drawing.SingleLinedFrameCharSet"/></description>
            </item>
            <item>
            <term><see cref="F:ConControls.Controls.BorderStyle.DoubleLined"/></term>
            <description><see cref="T:ConControls.Controls.Drawing.DoubleLinedFrameCharSet"/></description>
            </item>
            <item>
            <term><see cref="F:ConControls.Controls.BorderStyle.Bold"/></term>
            <description><see cref="T:ConControls.Controls.Drawing.BoldLinedFrameCharSet"/></description>
            </item>
            </list>
            </remarks>
            <seealso cref="T:ConControls.Controls.Drawing.FrameCharSet"/>
            <seealso cref="T:ConControls.Controls.Drawing.SingleLinedFrameCharSet"/>
            <seealso cref="T:ConControls.Controls.Drawing.DoubleLinedFrameCharSet"/>
            <seealso cref="T:ConControls.Controls.Drawing.BoldLinedFrameCharSet"/>
            <seealso cref="P:ConControls.Controls.IConsoleWindow.FrameCharSets"/>
        </member>
        <member name="P:ConControls.Controls.Drawing.FrameCharSets.Item(ConControls.Controls.BorderStyle)">
            <summary>
            Gets the <see cref="T:ConControls.Controls.Drawing.FrameCharSet"/> to use to draw a border in the given <paramref name="style"/>.
            </summary>
            <param name="style">The <see cref="T:ConControls.Controls.BorderStyle"/> to get the <see cref="T:ConControls.Controls.Drawing.FrameCharSet"/> for.</param>
            <returns>A <see cref="T:ConControls.Controls.Drawing.FrameCharSet"/> that can provide the characters needed to draw the given <see cref="T:ConControls.Controls.BorderStyle"/>.</returns>
        </member>
        <member name="T:ConControls.Controls.Drawing.IConsoleGraphics">
            <summary>
            Provides methods to draw on the console.
            </summary>
            <remarks>
            This interface represents an abstraction layer for <see cref="T:ConControls.Controls.ConsoleControl"/> instances
            to draw on the console screen buffer. It is implemented by the internal class <c>ConsoleGraphics</c>.<br/>
            An instance of this interface must be provided by <see cref="M:ConControls.Controls.IConsoleWindow.GetGraphics">IConsoleWindow.GetGraphics</see>
            to enable controls to draw themselves.
            </remarks>
        </member>
        <member name="M:ConControls.Controls.Drawing.IConsoleGraphics.DrawBackground(System.ConsoleColor,System.Drawing.Rectangle)">
            <summary>
            Sets the background <paramref name="color"/> in the specified <paramref name="area"/>.
            The changes are only written to the screen buffer when <see cref="M:ConControls.Controls.Drawing.IConsoleGraphics.Flush"/> is called.
            </summary>
            <param name="color">The <see cref="T:System.ConsoleColor"/> to use for the background.</param>
            <param name="area">The area (in screen buffer coordinates) to fill.</param>
        </member>
        <member name="M:ConControls.Controls.Drawing.IConsoleGraphics.DrawBorder(System.ConsoleColor,System.ConsoleColor,ConControls.Controls.BorderStyle,System.Drawing.Rectangle)">
            <summary>
            Draws a border around (onto the edge of) the specified <paramref name="area"/>.
            </summary>
            <param name="background">The <see cref="T:System.ConsoleColor"/> to use for the background.</param>
            <param name="foreground">The <see cref="T:System.ConsoleColor"/> to use for the border foreground.</param>
            <param name="style">The <see cref="T:ConControls.Controls.BorderStyle"/> to use for the border.</param>
            <param name="area">The area (in screen buffer coordinates) to fill.</param>
        </member>
        <member name="M:ConControls.Controls.Drawing.IConsoleGraphics.FillArea(System.ConsoleColor,System.ConsoleColor,System.Char,System.Drawing.Rectangle)">
            <summary>
            Fills the specified <paramref name="area"/> with the given colors and character.
            </summary>
            <param name="background">The background color to use.</param>
            <param name="foreColor">The foreground color to use.</param>
            <param name="c">The character to use.</param>
            <param name="area">The area to fill.</param>
            <remarks>
            <para>
            Fills the specified rectangle of the cached buffer
            with the given characters and colors. Character cells outside
            of the boundaries of the cached buffer will be ignored.
            </para>
            <para>
            The changed area will be written to the console screen buffer only when
            <see cref="M:ConControls.Controls.Drawing.IConsoleGraphics.Flush"/> is called.
            </para></remarks>
        </member>
        <member name="M:ConControls.Controls.Drawing.IConsoleGraphics.CopyCharacters(System.ConsoleColor,System.ConsoleColor,System.Drawing.Point,System.Char[],System.Drawing.Size)">
            <summary>
            Copies an array of characters into the buffer and applies the given background and
            foreground colors.
            </summary>
            <remarks>
            The method tries to copy the characters at the position given by <paramref name="topLeft"/>.
            It only copies characters that fit into the boundaries of the target buffer.
            </remarks>
            <param name="background">The <see cref="T:System.ConsoleColor"/> to use for the background.</param>
            <param name="foreColor">The <see cref="T:System.ConsoleColor"/> to use for the foreground.</param>
            <param name="topLeft">The top left <see cref="T:System.Drawing.Point"/> of the target area.</param>
            <param name="characters">An array of characters to copy to the buffer.</param>
            <param name="size">The size of the <paramref name="characters"/> array.</param>
        </member>
        <member name="M:ConControls.Controls.Drawing.IConsoleGraphics.Flush">
            <summary>
            Flushes the internal buffer to the console screen buffer.
            </summary>
        </member>
        <member name="T:ConControls.Controls.Drawing.NamespaceDoc">
            <summary>
            Provides classes that support the drawing of <see cref="T:ConControls.Controls.ConsoleControl"/>
            instances into the console screen buffer. It also provides default character
            sets to be used to draw control elements.
            </summary>
        </member>
        <member name="T:ConControls.Controls.Drawing.SingleLinedFrameCharSet">
            <summary>
            A <see cref="T:ConControls.Controls.Drawing.FrameCharSet"/> for single-lined frames.
            </summary>
            <seealso cref="T:ConControls.Controls.Drawing.FrameCharSet"/>
            <seealso cref="T:ConControls.Controls.Drawing.FrameCharSets"/>
            <seealso cref="P:ConControls.Controls.IConsoleWindow.FrameCharSets"/>
        </member>
        <member name="P:ConControls.Controls.Drawing.SingleLinedFrameCharSet.UpperLeft">
            <summary>
            The upper left corner of a single-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.SingleLinedFrameCharSet.UpperRight">
            <summary>
            The upper right corner of a single-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.SingleLinedFrameCharSet.LowerLeft">
            <summary>
            The lower left corner of a single-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.SingleLinedFrameCharSet.LowerRight">
            <summary>
            The lower right corner of a single-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.SingleLinedFrameCharSet.Horizontal">
            <summary>
            The horizontal line of a single-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.SingleLinedFrameCharSet.Vertical">
            <summary>
            The vertical line of a single-lined frame.
            </summary>
        </member>
        <member name="T:ConControls.Controls.IConsoleWindow">
            <summary>
            Interface to a <see cref="T:ConControls.Controls.ConsoleWindow"/>.
            </summary>
        </member>
        <member name="E:ConControls.Controls.IConsoleWindow.KeyEvent">
            <summary>
            Raised when a console input key event has been received.
            </summary>
        </member>
        <member name="E:ConControls.Controls.IConsoleWindow.MouseEvent">
            <summary>
            Raised when a console input mouse event has been received.
            </summary>
        </member>
        <member name="E:ConControls.Controls.IConsoleWindow.Disposed">
            <summary>
            Raised when this console window is disposed of.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IConsoleWindow.Title">
            <summary>
            The title of the console window.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IConsoleWindow.DefaultCursorSize">
            <summary>
            Gets or sets the default cursor size to use (0-100) for
            newly created focusable controls.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IConsoleWindow.DefaultForegroundColor">
            <summary>
            Gets or sets the default foreground color.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IConsoleWindow.DefaultBackgroundColor">
            <summary>
            Gets or sets the default background color.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IConsoleWindow.DefaultBorderColor">
            <summary>
            Gets or sets the default border color.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IConsoleWindow.FocusedControl">
            <summary>
            Gets or sets the currently focused control on this window.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IConsoleWindow.FrameCharSets">
            <summary>
            The <see cref="P:ConControls.Controls.IConsoleWindow.FrameCharSets"/> provider to use to draw frames.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IConsoleWindow.SwitchConsoleBuffersKey">
            <summary>
            The key combination to switch between the window and the original console screen buffer.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IConsoleWindow.CloseWindowKey">
            <summary>
            The key combination to close the window.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IConsoleWindow.ActiveScreen">
            <summary>
            Gets or sets wether this window is the active console screen buffer.
            If set to <c>true</c> this window is the active screen. If set to <c>false</c> the
             original console screen buffer will be activated.
            </summary>
            <remarks>There seems to be no Windows API method to get the currently active console screen buffer.
            So this property does not really determine if the window's buffer is currently active.
            It rather returns the internal flag indicating wether the window instance tried to set its buffer as active console buffer
            or if it switched back to the original buffer.
            <p/>
            If someone changed the active console screen buffer since the last set of <c>ActiveScreen</c>, the return value of this property may be misleading.
            </remarks>
        </member>
        <member name="P:ConControls.Controls.IConsoleWindow.IsDisposed">
            <summary>
            The window has been disposed of.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IConsoleWindow.SynchronizationLock">
            <summary>
            A synchronization object to synchronize conosle operations.
            </summary>
        </member>
        <member name="M:ConControls.Controls.IConsoleWindow.GetGraphics">
            <summary>
            Provides a <see cref="T:ConControls.Controls.Drawing.IConsoleGraphics"/> to draw on this console window.
            </summary>
            <returns>An <see cref="T:ConControls.Controls.Drawing.IConsoleGraphics"/> iterface to draw on this window.</returns>
        </member>
        <member name="M:ConControls.Controls.IConsoleWindow.FocusNext">
            <summary>
            Selects the next focusable control.
            </summary>
            <returns>The focused control, or <c>null</c> if no control could be focused.</returns>
        </member>
        <member name="M:ConControls.Controls.IConsoleWindow.FocusPrevious">
            <summary>
            Selects the previous focusable control.
            </summary>
            <returns>The focused control, or <c>null</c> if no control could be focused.</returns>
        </member>
        <member name="P:ConControls.Controls.IConsoleWindow.ExitCode">
            <summary>
            The exit code the window was closed with.
            </summary>
        </member>
        <member name="M:ConControls.Controls.IConsoleWindow.Close(System.Int32)">
            <summary>
            Closes (and diposes) the window and sets the given exit code.
            </summary>
            <param name="exitCode">The exit code for the window.</param>
        </member>
        <member name="M:ConControls.Controls.IConsoleWindow.WaitForCloseAsync">
            <summary>
            Waits asynchronously for the window to be closed/disposed.
            </summary>
            <returns>A task that is completed when the window is closed and returns the exit code.</returns>
        </member>
        <member name="T:ConControls.Controls.IControlContainer">
            <summary>
            An interface for classes that can contain console controls.
            </summary>
        </member>
        <member name="E:ConControls.Controls.IControlContainer.AreaChanged">
            <summary>
            Raised when the <see cref="P:ConControls.Controls.IControlContainer.Area"/> (or <see cref="P:ConControls.Controls.IControlContainer.Location"/> or <see cref="P:ConControls.Controls.IControlContainer.Size"/> have changed.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IControlContainer.Window">
            <summary>
            The main <see cref="T:ConControls.Controls.IConsoleWindow"/> this <see cref="T:ConControls.Controls.IControlContainer"/> belongs to.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IControlContainer.Parent">
            <summary>
            The parent <see cref="T:ConControls.Controls.ConsoleControl"/> that contains this control.
            The parent must be contained by the same <see cref="T:ConControls.Controls.IConsoleWindow"/>.
            If this propery is <c>null</c>, the control is not displayed.
            </summary>
            <exception cref="T:System.InvalidOperationException">The parent is not part of the same <see cref="T:ConControls.Controls.IConsoleWindow"/> or this control is the root element of the window..</exception>
        </member>
        <member name="P:ConControls.Controls.IControlContainer.Location">
            <summary>
            The location of this <see cref="T:ConControls.Controls.IControlContainer"/> in character columns and rows
            from the upper left corner of the console screen buffer.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IControlContainer.Size">
            <summary>
            The size of this <see cref="T:ConControls.Controls.IControlContainer"/> in character columns and rows.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IControlContainer.Area">
            <summary>
            A <see cref="T:System.Drawing.Rectangle"/> representing the area (in character columns and rows) this <see cref="T:ConControls.Controls.IControlContainer"/>
            occupies in the console screen buffer.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IControlContainer.Controls">
            <summary>
            The collection of child controls in this <see cref="T:ConControls.Controls.IControlContainer"/>.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IControlContainer.DrawingInhibited">
            <summary>
            Determines if drawing is currently allowed or inhibited via <see cref="M:ConControls.Controls.IControlContainer.DeferDrawing"/>
            or the <see cref="P:ConControls.Controls.IControlContainer.Visible"/> property.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IControlContainer.Enabled">
            <summary>
            Gets wether this control or <see cref="T:ConControls.Controls.IControlContainer"/> is enabled.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IControlContainer.Visible">
            <summary>
            Gets wether this control or <see cref="T:ConControls.Controls.IControlContainer"/> is visible.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IControlContainer.ForegroundColor">
            <summary>
            Gets or sets the <see cref="T:System.ConsoleColor"/> to use for foreground drawings.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IControlContainer.BackgroundColor">
            <summary>
            Gets or sets the <see cref="T:System.ConsoleColor"/> to use for the background of this control.
            </summary>
            <remarks>
            <para>If this property is <c>null</c>, the parent's setting (or finally the <see cef="Window"/>'s default setting) will be used.</para>
            </remarks>
        </member>
        <member name="P:ConControls.Controls.IControlContainer.BorderColor">
            <summary>
            Gets or sets the <see cref="T:System.ConsoleColor"/> to use for the border of this control.
            </summary>
            <remarks>
            <para>If this property is <c>null</c>, the parent's setting (or finally the <see cef="Window"/>'s default setting) will be used.</para>
            </remarks>
        </member>
        <member name="P:ConControls.Controls.IControlContainer.CursorSize">
            <summary>
            Gets or sets the cursor size for this control.
            </summary>
            <remarks>
            <para>
            This value describes the size of the text cursor. It should be between <c>zero</c> and <c>100</c>.
            </para>
            <para>
            This property is only used by the <see cref="P:ConControls.Controls.IControlContainer.Window"/> if this control is
            currently focused.
            </para>
            <para>If this property is <c>null</c>, the parent's setting (or finally the <see cef="Window"/>'s default setting) will be used.</para>
            </remarks>
        </member>
        <member name="M:ConControls.Controls.IControlContainer.DeferDrawing">
            <summary>
            Defers any drawing operation until the return value has been disposed of again.
            </summary>
            <remarks>Use this to surround a block of code that changes multiple properties of this
            <see cref="T:ConControls.Controls.IControlContainer"/> or its children. This avoids redrawing the control for
            each changed property, and instead redraws the whole container when the returned value
            is disposed.
            <code language="c#">
            ConsoleControl control = ...;
            using(control.DeferDrawing())
            {
                control.ForegroundColor = ConsoleColor.Green;
                control.BackgroundColor = ConsoleColor.Black;
            }
            </code>
            At the end of this block, drawing will be resumed again.
            </remarks>
            <returns>An <see cref="T:System.IDisposable"/> that on calling <see cref="M:System.IDisposable.Dispose"/> releases
            the drawing barriere of this window.</returns>
        </member>
        <member name="M:ConControls.Controls.IControlContainer.PointToClient(System.Drawing.Point)">
            <summary>
            Converts a <see cref="T:System.Drawing.Point"/> from console coordinates to client coordinates.
            </summary>
            <param name="consolePoint">The <see cref="T:System.Drawing.Point"/> in console coordinates to convert to client coordinates.</param>
            <returns>The converted <see cref="T:System.Drawing.Point"/> in client coordinates.</returns>
        </member>
        <member name="M:ConControls.Controls.IControlContainer.PointToConsole(System.Drawing.Point)">
            <summary>
            Converts a <see cref="T:System.Drawing.Point"/> from client coordinates to console coordinates.
            </summary>
            <param name="clientPoint">The <see cref="T:System.Drawing.Point"/> in client coordinates to convert to console coordinates.</param>
            <returns>The converted <see cref="T:System.Drawing.Point"/> in console coordinates.</returns>
        </member>
        <member name="T:ConControls.Controls.KeyCombination">
            <summary>
            Represents a key combination with modifier keys.
            </summary>
        </member>
        <member name="P:ConControls.Controls.KeyCombination.Escape">
            <summary>
            Escape.
            </summary>
        </member>
        <member name="P:ConControls.Controls.KeyCombination.AltF4">
            <summary>
            Alt + F4.
            </summary>
        </member>
        <member name="P:ConControls.Controls.KeyCombination.F11">
            <summary>
            F11.
            </summary>
        </member>
        <member name="P:ConControls.Controls.KeyCombination.Alt">
            <summary>
            Gets wether an Alt key needs to be pressed.
            </summary>
        </member>
        <member name="P:ConControls.Controls.KeyCombination.Ctrl">
            <summary>
            Gets wether a Control key needs to be pressed.
            </summary>
        </member>
        <member name="P:ConControls.Controls.KeyCombination.Shift">
            <summary>
            Gets wether a shiftkey needs to be pressed.
            </summary>
        </member>
        <member name="P:ConControls.Controls.KeyCombination.Key">
            <summary>
            Gets the <see cref="T:ConControls.WindowsApi.Types.VirtualKey"/> of this <see cref="T:ConControls.Controls.KeyCombination"/>.
            </summary>
        </member>
        <member name="M:ConControls.Controls.KeyCombination.#ctor(ConControls.WindowsApi.Types.VirtualKey)">
            <summary>
            Creates a new <see cref="T:ConControls.Controls.KeyCombination"/> with the given <paramref name="key"/> and no modifier keys.
            </summary>
            <param name="key">The key for the new <see cref="T:ConControls.Controls.KeyCombination"/>.</param>
        </member>
        <member name="M:ConControls.Controls.KeyCombination.#ctor(ConControls.WindowsApi.Types.VirtualKey,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates a new <see cref="T:ConControls.Controls.KeyCombination"/> with the given <paramref name="key"/> and modifier keys.
            </summary>
            <param name="key">The key for the new <see cref="T:ConControls.Controls.KeyCombination"/>.</param>
            <param name="alt"><c>true</c> if an Alt key should be pressed for this combination.</param>
            <param name="ctrl"><c>true</c> if a Control key should be pressed for this combination.</param>
            <param name="shift"><c>true</c> if a shift key should be pressed for this combination.</param>
        </member>
        <member name="M:ConControls.Controls.KeyCombination.WithAlt">
            <summary>
            Creates a new <see cref="T:ConControls.Controls.KeyCombination"/> with the current settings but an Alt key pressed.
            </summary>
            <returns>A new <see cref="T:ConControls.Controls.KeyCombination"/> with the same values as the current instance but see <see cref="P:ConControls.Controls.KeyCombination.Alt"/> pressed.</returns>
        </member>
        <member name="M:ConControls.Controls.KeyCombination.WithCtrl">
            <summary>
            Creates a new <see cref="T:ConControls.Controls.KeyCombination"/> with the current settings but a Control key pressed.
            </summary>
            <returns>A new <see cref="T:ConControls.Controls.KeyCombination"/> with the same values as the current instance but see <see cref="P:ConControls.Controls.KeyCombination.Ctrl"/> pressed.</returns>
        </member>
        <member name="M:ConControls.Controls.KeyCombination.WithShift">
            <summary>
            Creates a new <see cref="T:ConControls.Controls.KeyCombination"/> with the current settings but a shift key pressed.
            </summary>
            <returns>A new <see cref="T:ConControls.Controls.KeyCombination"/> with the same values as the current instance but see <see cref="P:ConControls.Controls.KeyCombination.Shift"/> pressed.</returns>
        </member>
        <member name="M:ConControls.Controls.KeyCombination.WithoutAlt">
            <summary>
            Creates a new <see cref="T:ConControls.Controls.KeyCombination"/> with the current settings but no Alt key pressed.
            </summary>
            <returns>A new <see cref="T:ConControls.Controls.KeyCombination"/> with the same values as the current instance but not see <see cref="P:ConControls.Controls.KeyCombination.Alt"/> pressed.</returns>
        </member>
        <member name="M:ConControls.Controls.KeyCombination.WithoutCtrl">
            <summary>
            Creates a new <see cref="T:ConControls.Controls.KeyCombination"/> with the current settings but no Control key pressed.
            </summary>
            <returns>A new <see cref="T:ConControls.Controls.KeyCombination"/> with the same values as the current instance but not see <see cref="P:ConControls.Controls.KeyCombination.Ctrl"/> pressed.</returns>
        </member>
        <member name="M:ConControls.Controls.KeyCombination.WithoutShift">
            <summary>
            Creates a new <see cref="T:ConControls.Controls.KeyCombination"/> with the current settings but no shift key pressed.
            </summary>
            <returns>A new <see cref="T:ConControls.Controls.KeyCombination"/> with the same values as the current instance but not see <see cref="P:ConControls.Controls.KeyCombination.Shift"/> pressed.</returns>
        </member>
        <member name="M:ConControls.Controls.KeyCombination.Equals(System.Object)">
            <summary>
            Tests a value or reference for equality.
            </summary>
            <param name="obj">The instance to check for equality.</param>
            <returns><c>true</c> if <paramref name="obj"/> is a <see cref="T:ConControls.Controls.KeyCombination"/> and has the same properties as the current instance.</returns>
        </member>
        <member name="M:ConControls.Controls.KeyCombination.Equals(ConControls.Controls.KeyCombination)">
            <summary>
            Tests a <see cref="T:ConControls.Controls.KeyCombination"/> instance for equality.
            </summary>
            <param name="other">The other <see cref="T:ConControls.Controls.KeyCombination"/> to check for equality.</param>
            <returns><c>true</c> if <paramref name="other"/> has the same properties as the current instance.</returns>
        </member>
        <member name="M:ConControls.Controls.KeyCombination.GetHashCode">
            <summary>
            Calculates a hash code for this instance.
            </summary>
            <returns>The hash code for this instance.</returns>
        </member>
        <member name="M:ConControls.Controls.KeyCombination.op_Equality(ConControls.Controls.KeyCombination,ConControls.Controls.KeyCombination)">
            <summary>
            Tests two <see cref="T:ConControls.Controls.KeyCombination"/> instances for equality.
            </summary>
            <param name="left">The left operand.</param>
            <param name="right">The right operand.</param>
            <returns><c>true</c> if the two instances have the same property values, <c>false</c> if not.</returns>
        </member>
        <member name="M:ConControls.Controls.KeyCombination.op_Inequality(ConControls.Controls.KeyCombination,ConControls.Controls.KeyCombination)">
            <summary>
            Tests two <see cref="T:ConControls.Controls.KeyCombination"/> instances for inequality.
            </summary>
            <param name="left">The left operand.</param>
            <param name="right">The right operand.</param>
            <returns><c>false</c> if the two instances have the same property values, <c>true</c> if not.</returns>
        </member>
        <member name="T:ConControls.Controls.KeyEventArgs">
            <summary>
            Arguments for the <see cref="E:ConControls.Controls.IConsoleWindow.KeyEvent">IConsoleWindow.KeyEvent</see>.
            </summary>
        </member>
        <member name="P:ConControls.Controls.KeyEventArgs.UnicodeChar">
            <summary>
            The unicode character representing the key.
            </summary>
        </member>
        <member name="P:ConControls.Controls.KeyEventArgs.RepeatCount">
            <summary>
            The repeat count, which indicates that a key is being held down.
            </summary>
            <remarks>
            This property represents the repeat count, which indicates that a key is being held down.
            For example, when a key is held down, you might get five events with this member equal to 1, one event with this member equal to 5, or multiple events with this member greater than or equal to 1.
            </remarks>
        </member>
        <member name="P:ConControls.Controls.KeyEventArgs.VirtualKey">
            <summary>
            A <see cref="P:ConControls.Controls.KeyEventArgs.VirtualKey">virtual-key code</see> that identifies the given key
            in a device-independent manner.
            </summary>
        </member>
        <member name="P:ConControls.Controls.KeyEventArgs.VirtualScanCode">
            <summary>
            The virtual scan code of the given key that represents the device-dependent
            value generated by the keyboard hardware.
            </summary>
        </member>
        <member name="P:ConControls.Controls.KeyEventArgs.KeyDown">
            <summary>
            If the key is pressed, this member is <c>true</c>.
            Otherwise, this member is <c>false</c> (the key is released).
            </summary>
        </member>
        <member name="P:ConControls.Controls.KeyEventArgs.ControlKeys">
            <summary>
            The state of the control keys. This can be a combination
            of <see cref="T:ConControls.WindowsApi.Types.ControlKeyStates"/> values.
            </summary>
        </member>
        <member name="T:ConControls.Controls.Label">
            <summary>
            A console control to display a text label.
            </summary>
            <remarks>A label is not focusable and can not be a tab stop. The text can be scrolled by mouse though, if it does not fit in the control's area.</remarks>
        </member>
        <member name="M:ConControls.Controls.Label.#ctor(ConControls.Controls.IConsoleWindow)">
            <summary>
            Creates a new <see cref="T:ConControls.Controls.Label"/> instance.
            </summary>
            <param name="window">The <see cref="T:ConControls.Controls.IConsoleWindow"/> this control should belong to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="window"/> is <c>null</c>.</exception>
        </member>
        <member name="T:ConControls.Controls.MouseEventArgs">
            <summary>
            Arguments for the <see cref="E:ConControls.Controls.IConsoleWindow.MouseEvent">IConsoleWindow.MouseEvent</see>.
            </summary>
        </member>
        <member name="P:ConControls.Controls.MouseEventArgs.ControlKeys">
            <summary>
            The state of the control keys. This can be a combination
            of <see cref="T:ConControls.WindowsApi.Types.ControlKeyStates"/> values.
            </summary>
        </member>
        <member name="P:ConControls.Controls.MouseEventArgs.ButtonState">
            <summary>
            Indicates which mouse buttons are pressed.
            </summary>
        </member>
        <member name="P:ConControls.Controls.MouseEventArgs.Kind">
            <summary>
            The kind of mouse event. This can be a combination of <see cref="T:ConControls.WindowsApi.Types.MouseEventFlags"/> values.
            </summary>
            <remarks>
            If this is <see cref="F:ConControls.WindowsApi.Types.MouseEventFlags.Wheeled"/> or <see cref="F:ConControls.WindowsApi.Types.MouseEventFlags.WheeledHorizontally"/>
            see the <see cref="P:ConControls.Controls.MouseEventArgs.Scroll"/> value for the amount and direction of the mouse wheel rotation.</remarks>
        </member>
        <member name="P:ConControls.Controls.MouseEventArgs.Position">
            <summary>
            The mouse position, in terms of the console screen buffer's character-cell coordinates.
            </summary>
        </member>
        <member name="P:ConControls.Controls.MouseEventArgs.Scroll">
            <summary>
            Returns the amount and direction the mouse wheel has been rotated. This is only valid if <see cref="P:ConControls.Controls.MouseEventArgs.Kind"/>
            is <see cref="F:ConControls.WindowsApi.Types.MouseEventFlags.Wheeled"/> or <see cref="F:ConControls.WindowsApi.Types.MouseEventFlags.WheeledHorizontally"/>.
            </summary>
            <remarks>
            If this value is positive, the wheel was rotated forward (away from the user) or to the right (depending on <see cref="P:ConControls.Controls.MouseEventArgs.Kind"/>).<br/>
            If the value is negative, the wheel was rotated backward (toward the user) or to the left.</remarks>
        </member>
        <member name="T:ConControls.Controls.NamespaceDoc">
            <summary>
            This namespace provides the public console UI control classes
            </summary>
            <remarks>
            <para>
            This namespace contains the central base classes for creating ConControls user interfaces.<br/>
            These include the main <see cref="T:ConControls.Controls.ConsoleWindow"/> (implementing the <see cref="T:ConControls.Controls.IConsoleWindow"/> interface), the <see cref="T:ConControls.Controls.ConsoleControl"/> base class for console UI controls
            and the <see cref="T:ConControls.Controls.IControlContainer"/> interface.<br/>
            It also provides the <see cref="T:ConControls.Controls.ControlCollection"/> that can keep the child controls of a <see cref="T:ConControls.Controls.IControlContainer"/>.
            </para>
            <para>
            This namespace also provides the basic console UI controls inherited from <see cref="T:ConControls.Controls.ConsoleControl"/>.<br/>
            Currently it is not possible to further inherit these classes or derive custom classes from <c>ConsoleControl</c>. The infrastructure design is not yet reliable enough.
            </para>
            </remarks>
        </member>
        <member name="T:ConControls.Controls.Panel">
            <summary>
            A console panel control. A plain container
            for other controls.
            </summary>
        </member>
        <member name="M:ConControls.Controls.Panel.#ctor(ConControls.Controls.IConsoleWindow)">
            <inheritdoc />
        </member>
        <member name="T:ConControls.Controls.ProgressBar">
            <summary>
            A console progress bar control.
            </summary>
        </member>
        <member name="F:ConControls.Controls.ProgressBar.DefaultProgressChar">
            <summary>
            The default progress character used by this progress bar.
            </summary>
        </member>
        <member name="T:ConControls.Controls.ProgressBar.ProgressOrientation">
            <summary>
            The orientation of the progress bar.
            </summary>
        </member>
        <member name="F:ConControls.Controls.ProgressBar.ProgressOrientation.LeftToRight">
            <summary>
            Progress grows from left to right.
            </summary>
        </member>
        <member name="F:ConControls.Controls.ProgressBar.ProgressOrientation.RightToLeft">
            <summary>
            Progress grows from right to left.
            </summary>
        </member>
        <member name="F:ConControls.Controls.ProgressBar.ProgressOrientation.TopToBottom">
            <summary>
            Progress grows from top to bottom.
            </summary>
        </member>
        <member name="F:ConControls.Controls.ProgressBar.ProgressOrientation.BottomToTop">
            <summary>
            Progress grows from bottom to top.
            </summary>
        </member>
        <member name="E:ConControls.Controls.ProgressBar.PercentageChanged">
            <summary>
            Raised when <see cref="P:ConControls.Controls.ProgressBar.Percentage"/> has been changed.
            </summary>
        </member>
        <member name="E:ConControls.Controls.ProgressBar.ProgressCharChanged">
            <summary>
            Raised when <see cref="P:ConControls.Controls.ProgressBar.ProgressChar"/> has been changed.
            </summary>
        </member>
        <member name="E:ConControls.Controls.ProgressBar.OrientationChanged">
            <summary>
            Raised when <see cref="P:ConControls.Controls.ProgressBar.Orientation"/> has been changed.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ProgressBar.Percentage">
            <summary>
            Gets or sets the percentage value of this progress bar (between 0 and 1 inclusive).
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The value was less than zero or greater than 1.</exception>
        </member>
        <member name="P:ConControls.Controls.ProgressBar.ProgressChar">
            <summary>
            Gets or sets the progress character used to display the progress bar.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ProgressBar.Orientation">
            <summary>
            Gets or sets the orientation of this progressbar (default is <see cref="F:ConControls.Controls.ProgressBar.ProgressOrientation.LeftToRight"/>).
            </summary>
        </member>
        <member name="M:ConControls.Controls.ProgressBar.#ctor(ConControls.Controls.IConsoleWindow)">
            <inheritdoc />
        </member>
        <member name="M:ConControls.Controls.ProgressBar.DrawClientArea(ConControls.Controls.Drawing.IConsoleGraphics)">
            <inheritdoc />
        </member>
        <member name="T:ConControls.Controls.TextBlock">
            <summary>
            A console control to display a block of text.
            </summary>
        </member>
        <member name="P:ConControls.Controls.TextBlock.TabStop">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.TextBlock.CanFocus">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.TextBlock.CursorVisible">
            <inheritdoc />
        </member>
        <member name="M:ConControls.Controls.TextBlock.#ctor(ConControls.Controls.IConsoleWindow)">
            <summary>
            Creates a new <see cref="T:ConControls.Controls.TextBlock"/> instance.
            </summary>
            <param name="window">The <see cref="T:ConControls.Controls.IConsoleWindow"/> this control should belong to.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="window"/> is <c>null</c>.</exception>
        </member>
        <member name="T:ConControls.Controls.TextControl">
            <summary>
            An abstract base class for console controls that display a scrollable block of text.
            </summary>
        </member>
        <member name="E:ConControls.Controls.TextControl.TextChanged">
            <summary>
            Raised when the <see cref="P:ConControls.Controls.TextControl.Text"/> property has been changed.
            </summary>
        </member>
        <member name="E:ConControls.Controls.TextControl.CanFocusChanged">
            <summary>
            Raised when the <see cref="P:ConControls.Controls.TextControl.CanFocus"/> property has been changed.
            </summary>
        </member>
        <member name="P:ConControls.Controls.TextControl.CaretVisible">
            <summary>
            Gets wether the caret is inside the currently displayed area.
            </summary>
        </member>
        <member name="P:ConControls.Controls.TextControl.CanEdit">
            <summary>
            Gets or sets wether this <see cref="T:ConControls.Controls.TextControl"/> is read-only or can be edited.
            </summary>
            <exception cref="T:System.NotSupportedException">Setting this property is not supported by the current control's type.</exception>
        </member>
        <member name="P:ConControls.Controls.TextControl.CanFocus">
            <summary>
            Returns <c>true</c> for a <see cref="T:ConControls.Controls.TextBlock"/>. This control can be focused.
            </summary>
        </member>
        <member name="P:ConControls.Controls.TextControl.Scroll">
            <summary>
            Gets or sets the scroll dimension. The <see cref="P:System.Drawing.Point.X"/> part of this <see cref="T:System.Drawing.Point"/> defines
            the number of character columns scrolled to the right, and the <see cref="P:System.Drawing.Point.Y"/> part defines the
            number of character rows scrolled down.
            </summary>
        </member>
        <member name="P:ConControls.Controls.TextControl.CursorVisible">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.TextControl.Text">
            <summary>
            Gets or sets the text displayed in this <see cref="T:ConControls.Controls.TextBlock"/> control.
            </summary>
        </member>
        <member name="P:ConControls.Controls.TextControl.Caret">
            <summary>
            Gets or sets the caret position.
            </summary>
        </member>
        <member name="P:ConControls.Controls.TextControl.WrapMode">
            <summary>
            Gets or sets wether and how lines are wrapped.
            </summary>
            <value>One of the <see cref="T:ConControls.Controls.Text.WrapMode"/> enuemration values.</value>
        </member>
        <member name="M:ConControls.Controls.TextControl.#ctor(ConControls.Controls.IConsoleWindow)">
            <inheritdoc />
        </member>
        <member name="M:ConControls.Controls.TextControl.Append(System.String)">
            <summary>
            Appends the given <paramref name="text"/> to the current text.
            If the caret is positioned at the end of the current text, it will
            be placed at the end of the appended text and <see cref="M:ConControls.Controls.TextControl.ScrollToCaret"/>
            will be called after to make sure the appended text is shown.
            </summary>
            <param name="text">The string to append to the current text.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="text"/> is <c>null</c>.</exception>
        </member>
        <member name="M:ConControls.Controls.TextControl.Clear">
            <inheritdoc />
        </member>
        <member name="M:ConControls.Controls.TextControl.ScrollToCaret">
            <summary>
            Scrolls the content so that the caret (cursor) becomes visible.
            If the caret already is inside the displayed text, the scrolling will not be changed.
            If the caret is outside the displayed text, scrolling is adjusted so that the caret
            just appears in the client area.
            </summary>
        </member>
        <member name="M:ConControls.Controls.TextControl.OnAreaChanged">
            <inheritdoc />
        </member>
        <member name="M:ConControls.Controls.TextControl.OnBorderStyleChanged">
            <inheritdoc />
        </member>
        <member name="M:ConControls.Controls.TextControl.OnCursorPositionChanged">
            <inheritdoc />
        </member>
        <member name="M:ConControls.Controls.TextControl.OnKeyEvent(ConControls.Controls.KeyEventArgs)">
            <inheritdoc />
        </member>
        <member name="M:ConControls.Controls.TextControl.OnMouseClick(ConControls.Controls.MouseEventArgs)">
            <summary>
            This method is called when the <see cref="T:ConControls.Controls.TextControl"/> has been clicked on.
            It sets the cursor position to the clicked location. If there is not enough
            content to set the cursor to this position, the neares possible cursor position will be used.
            </summary>
            <param name="e">The <see cref="T:ConControls.Controls.MouseEventArgs"/> containing the details of the event.</param>
            <remarks>
            The <see cref="P:ConControls.Controls.MouseEventArgs.Position"/> property of the arguments <paramref name="e"/> contains the mouse position in client coordinates (relative to the control's client area).
            </remarks>
        </member>
        <member name="M:ConControls.Controls.TextControl.OnMouseScroll(ConControls.Controls.MouseEventArgs)">
            <summary>
            This method is called when the mouse wheel has been used above this <see cref="T:ConControls.Controls.TextControl"/>.
            It sets scrolls the content if necessary and possible.
            </summary>
            <param name="e">The <see cref="T:ConControls.Controls.MouseEventArgs"/> containing the details of the event.</param>
            <remarks>
            The <see cref="P:ConControls.Controls.MouseEventArgs.Position"/> property of the arguments <paramref name="e"/> contains the mouse position in client coordinates (relative to the control's client area).
            </remarks>
        </member>
        <member name="M:ConControls.Controls.TextControl.OnCanFocusChanged">
            <summary>
            Called when the <see cref="P:ConControls.Controls.TextControl.CanFocus"/> property changed.<br/>
            Raises the <see cref="E:ConControls.Controls.TextControl.CanFocusChanged"/> event.
            </summary>
        </member>
        <member name="M:ConControls.Controls.TextControl.DrawClientArea(ConControls.Controls.Drawing.IConsoleGraphics)">
            <inheritdoc />
        </member>
        <member name="M:ConControls.Controls.TextControl.OnTextChanged">
            <summary>
            Called when the <see cref="P:ConControls.Controls.TextControl.Text"/> property has been changed.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Text.ConsoleTextController.Width">
            <inheritdoc />
        </member>
        <member name="T:ConControls.Controls.Text.NamespaceDoc">
            <summary>
            This namespace provides specific types for use with <see cref="T:ConControls.Controls.TextControl"/> and derived classes.
            </summary>
        </member>
        <member name="T:ConControls.Controls.Text.WrapMode">
            <summary>
            The wrap modes for controls derived from <see cref="T:ConControls.Controls.TextControl"/>.
            </summary>
        </member>
        <member name="F:ConControls.Controls.Text.WrapMode.NoWrap">
            <summary>
            No wrapping at all.
            </summary>
        </member>
        <member name="F:ConControls.Controls.Text.WrapMode.SimpleWrap">
            <summary>
            Simply wrap lines disregarding words or whitespaces etc.
            </summary>
        </member>
        <member name="T:ConControls.Extensions.CoordinateExtensions">
            <summary>
            Provides extension methods to create <see cref="T:System.Drawing.Point"/>,
            <see cref="T:System.Drawing.Size"/> or <see cref="T:System.Drawing.Rectangle"/> instances from tuples.
            </summary>
        </member>
        <member name="M:ConControls.Extensions.CoordinateExtensions.Pt(System.ValueTuple{System.Int32,System.Int32})">
            <summary>
            Creates a <see cref="T:System.Drawing.Point"/> instance from the given coordinates.
            </summary>
            <param name="p">A tuple of two integers representing the <c>x</c> and <c>y</c> coordinates.</param>
            <returns>A <see cref="T:System.Drawing.Point"/> with its <see cref="P:System.Drawing.Point.X"/> and <see cref="P:System.Drawing.Point.Y"/> properties set to the given coordinates.</returns>
        </member>
        <member name="M:ConControls.Extensions.CoordinateExtensions.Sz(System.ValueTuple{System.Int32,System.Int32})">
            <summary>
            Creates a <see cref="T:System.Drawing.Size"/> instance from the given values.
            </summary>
            <param name="p">A tuple of two integers representing the <c>width</c> and <c>height</c> values.</param>
            <returns>A <see cref="T:System.Drawing.Size"/> with its <see cref="P:System.Drawing.Size.Width"/> and <see cref="P:System.Drawing.Size.Height"/> properties set to the given values.</returns>
        </member>
        <member name="M:ConControls.Extensions.CoordinateExtensions.Rect(System.ValueTuple{System.Int32,System.Int32,System.Int32,System.Int32})">
            <summary>
            Creates a <see cref="T:System.Drawing.Rectangle"/> instance from the given values.
            </summary>
            <param name="r">A tuple of four integers representing the
            <c>left</c>, <c>top</c>, <c>width</c> and <c>height</c> values.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle"/> with its properties set to the given values.</returns>
        </member>
        <member name="M:ConControls.Extensions.CoordinateExtensions.Rect(System.ValueTuple{System.Int32,System.Int32,System.Drawing.Size})">
            <summary>
            Creates a <see cref="T:System.Drawing.Rectangle"/> instance from the given values.
            </summary>
            <param name="r">A tuple of two integers (representing the
            <c>left</c> and <c>top</c> values) and a <see cref="T:System.Drawing.Size"/>
            value representing the size of the rectangle to create.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle"/> with its properties set to the given values.</returns>
        </member>
        <member name="M:ConControls.Extensions.CoordinateExtensions.Rect(System.ValueTuple{System.Drawing.Point,System.Int32,System.Int32})">
            <summary>
            Creates a <see cref="T:System.Drawing.Rectangle"/> instance from the given values.
            </summary>
            <param name="r">A tuple of a <see cref="T:System.Drawing.Point"/> value (representing
            the rectangle's position) and two integers representing the
            <c>width</c> and <c>height</c> values.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle"/> with its properties set to the given values.</returns>
        </member>
        <member name="M:ConControls.Extensions.CoordinateExtensions.Rect(System.ValueTuple{System.Drawing.Point,System.Drawing.Size})">
            <summary>
            Creates a <see cref="T:System.Drawing.Rectangle"/> instance from the given values.
            </summary>
            <param name="r">A tuple of a <see cref="T:System.Drawing.Point"/> value (representing
            the rectangle's position) and a <see cref="T:System.Drawing.Size"/> value (representing
            the rectangle's size).</param>
            <returns>A <see cref="T:System.Drawing.Rectangle"/> with its properties set to the given values.</returns>
        </member>
        <member name="T:ConControls.Extensions.NamespaceDoc">
            <summary>
            Provides extensions that can be useful when working with ConControls.
            </summary>
            <remarks>
            This namespace provides extension methods that can be helpful to
            express code intentions more easily when working with ConControls.
            </remarks>
        </member>
        <member name="T:ConControls.Properties.Resources">
            <summary>
              Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
            </summary>
        </member>
        <member name="P:ConControls.Properties.Resources.ResourceManager">
            <summary>
              Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
            </summary>
        </member>
        <member name="P:ConControls.Properties.Resources.Culture">
            <summary>
              Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
              Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
            </summary>
        </member>
        <member name="P:ConControls.Properties.Resources.Exception_CannotFocusUnFocusableControl">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die This instance of &quot;{0}&quot; cannot be focused! ähnelt.
            </summary>
        </member>
        <member name="P:ConControls.Properties.Resources.Exception_CanOnlyUseSingleContext">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die There can only be one single console window at a time! Dispose of any existing console window before instantiating a new one. ähnelt.
            </summary>
        </member>
        <member name="P:ConControls.Properties.Resources.Exception_ControlDisposed">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The control &quot;{0}&quot; has already been disposed of! ähnelt.
            </summary>
        </member>
        <member name="P:ConControls.Properties.Resources.Exception_ControlsMustBeContained">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die ConsoleControl instances must be contained in an IConsoleContainer! Please provide a valid parent. ähnelt.
            </summary>
        </member>
        <member name="P:ConControls.Properties.Resources.Exception_CouldNotCreateScreenBuffer">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Failed to create a separate console screen buffer! ähnelt.
            </summary>
        </member>
        <member name="P:ConControls.Properties.Resources.Exception_CouldNotSetScreenBuffer">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Failed to set separate console screen buffer! ähnelt.
            </summary>
        </member>
        <member name="P:ConControls.Properties.Resources.Exception_DifferentWindow">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The controls cannot be part of different conosle windows! ähnelt.
            </summary>
        </member>
        <member name="P:ConControls.Properties.Resources.Exception_InvalidConsoleColor">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The ConsoleColor &quot;{0}&quot; is not supported! ähnelt.
            </summary>
        </member>
        <member name="P:ConControls.Properties.Resources.Exception_ProgressBarPercentageMustBeNonNegative">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The percentage value of a progress bar cannot be less than zero! ähnelt.
            </summary>
        </member>
        <member name="P:ConControls.Properties.Resources.Exception_ProgressBarPercentageMustNotBeGreaterThan1">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The percentage value of a proress bar cannot be greater than 1! ähnelt.
            </summary>
        </member>
        <member name="P:ConControls.Properties.Resources.Exception_PropertySetterNotSupported">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Setting the property &quot;{1}&quot; is not supported by control type &quot;{0}&quot;! ähnelt.
            </summary>
        </member>
        <member name="P:ConControls.Properties.Resources.Exception_WindowDisposed">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The console window used by this control has already been disposed of! ähnelt.
            </summary>
        </member>
        <member name="P:ConControls.Properties.Resources.Exception_WindowSizeNotSupported">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die Changing the console window&apos;s size is currently not supported! ähnelt.
            </summary>
        </member>
        <member name="T:ConControls.WindowsApi.ConsoleInputHandle">
            <summary>
            A console input handle.
            </summary>
        </member>
        <member name="T:ConControls.WindowsApi.ConsoleOutputHandle">
            <summary>
            A console output handle.
            </summary>
        </member>
        <member name="T:ConControls.WindowsApi.NamespaceDoc">
            <summary>
            Provides native Win32 methods and Windows API types.
            </summary>
            <remarks>
            This namespace provides internal classes to access unmanaged Windows API methods and types.<br/>
            Except for a few types, this namespace is only for internal use.
            </remarks>
        </member>
        <member name="T:ConControls.WindowsApi.Types.ControlKeyStates">
            <summary>
            The state of the control keys.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.ControlKeyStates.None">
            <summary>
            No modifier key is pressed.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.ControlKeyStates.RIGHT_ALT_PRESSED">
            <summary>
            The right ALT key is pressed.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.ControlKeyStates.LEFT_ALT_PRESSED">
            <summary>
            The left ALT key is pressed.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.ControlKeyStates.RIGHT_CTRL_PRESSED">
            <summary>
            The right CTRL key is pressed.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.ControlKeyStates.LEFT_CTRL_PRESSED">
            <summary>
            The left CTRL key is pressed.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.ControlKeyStates.SHIFT_PRESSED">
            <summary>
            The SHIFT key is pressed.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.ControlKeyStates.NUMLOCK_ON">
            <summary>
            The NUM LOCK light is on.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.ControlKeyStates.SCROLLLOCK_ON">
            <summary>
            The SCROLL LOCK light is on.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.ControlKeyStates.CAPSLOCK_ON">
            <summary>
            The CAPS LOCK light is on.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.ControlKeyStates.ENHANCED_KEY">
            <summary>
            The key is enhanced.
            </summary>
        </member>
        <member name="M:ConControls.WindowsApi.Types.COORD.ToString">
            <inheritdoc />
        </member>
        <member name="T:ConControls.WindowsApi.Types.MouseButtonStates">
            <summary>
            The states of the mouse buttons.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.MouseButtonStates.None">
            <summary>
            No mouse button pressed.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.MouseButtonStates.LeftButtonPressed">
            <summary>
            The leftmost mouse button.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.MouseButtonStates.RightButtonPressed">
            <summary>
            The rightmost mouse button.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.MouseButtonStates.SecondButtonPressed">
            <summary>
            The second button from the left.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.MouseButtonStates.ThirdButtonPressed">
            <summary>
            The third button from the left.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.MouseButtonStates.FourthButtonPressed">
            <summary>
            The fourth button from the left.
            </summary>
        </member>
        <member name="T:ConControls.WindowsApi.Types.MouseEventFlags">
            <summary>
            The different kinds of console mouse events.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.MouseEventFlags.None">
            <summary>
            Place holder flag for simple mouse clicks.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.MouseEventFlags.Moved">
            <summary>
            A change in mouse position occurred.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.MouseEventFlags.DoubleClick">
            <summary>
            The second click (button press) of a double-click occurred.
            The first click is returned as a regular button-press event.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.MouseEventFlags.Wheeled">
            <summary>
            The vertical mouse wheel was moved.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.MouseEventFlags.WheeledHorizontally">
            <summary>
            The horizontal mouse wheel was moved.
            </summary>
        </member>
        <member name="T:ConControls.WindowsApi.Types.NamespaceDoc">
            <summary>
            Provides Windows API types, records and enums.
            </summary>
            <remarks>
            This namespace provides types to marshal Win32 API calls, records and enums.<br/>
            Except for a few types, this namespace is intended for internal use only.
            </remarks>
        </member>
        <member name="T:ConControls.WindowsApi.Types.VirtualKey">
            <summary>
            Windows API virtual key codes (VK_ constants).
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.None">
            <summary>
            None.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.LeftButton">
            <summary>
            Left mouse button.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.RightButton">
            <summary>
            Right mouse button.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Cancel">
            <summary>
            Control-break processing.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.MiddleButton">
            <summary>
            Middle mouse button (three-button mouse).
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.ExtraButton1">
            <summary>
            X1 mouse button.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.ExtraButton2">
            <summary>
            X2 mouse button.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Back">
            <summary>
            Backspace key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Tab">
            <summary>
            Tab key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Clear">
            <summary>
            Clear key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Return">
            <summary>
            Enter key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Shift">
            <summary>
            Shift key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Control">
            <summary>
            Ctrl key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Menu">
            <summary>
            Alt key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Pause">
            <summary>
            Pause key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.CapsLock">
            <summary>
            Caps lock key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Kana">
            <summary>
            IME Kana mode.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Hangeul">
            <summary>
            IME Hanguel mode (maintained for compatibility; use VK_HANGUL)
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Hangul">
            <summary>
            IME Hangul mode
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.ImeOn">
            <summary>
            IME On.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Junja">
            <summary>
            IME Junja mode.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Final">
            <summary>
            IME final mode.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Hanja">
            <summary>
            IME Hanja mode.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Kanji">
            <summary>
            IME Kanji mode.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.ImeOff">
            <summary>
            IME off.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Escape">
            <summary>
            Esc key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Convert">
            <summary>
            IME convert.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.NonConvert">
            <summary>
            IME nonconvert.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Accept">
            <summary>
            IME accept.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.ModeChange">
            <summary>
            IME mode change request.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Space">
            <summary>
            Space bar.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Prior">
            <summary>
            Page Up key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Next">
            <summary>
            Page down key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.End">
            <summary>
            End key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Home">
            <summary>
            Home key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Left">
            <summary>
            Left arrow key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Up">
            <summary>
            Up arrow key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Right">
            <summary>
             Right arrow key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Down">
            <summary>
            Down arrow key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Select">
            <summary>
            Select key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Print">
            <summary>
            Print key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Execute">
            <summary>
            Execute key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Snapshot">
            <summary>
            Print screen key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Insert">
            <summary>
            Ins key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Delete">
            <summary>
            Del key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Help">
            <summary>
            Help key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.N0">
            <summary>
            0 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.N1">
            <summary>
            1 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.N2">
            <summary>
            2 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.N3">
            <summary>
            3 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.N4">
            <summary>
            4 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.N5">
            <summary>
            5 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.N6">
            <summary>
            6 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.N7">
            <summary>
            7 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.N8">
            <summary>
            8 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.N9">
            <summary>
            9 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.A">
            <summary>
            A key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.B">
            <summary>
            B key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.C">
            <summary>
            C key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.D">
            <summary>
            D key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.E">
            <summary>
            E key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.F">
            <summary>
            F key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.G">
            <summary>
            G key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.H">
            <summary>
            H key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.I">
            <summary>
            I key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.J">
            <summary>
            J key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.K">
            <summary>
            K key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.L">
            <summary>
            L key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.M">
            <summary>
            M key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.N">
            <summary>
            N key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.O">
            <summary>
            O key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.P">
            <summary>
            P key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Q">
            <summary>
            Q key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.R">
            <summary>
            R key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.S">
            <summary>
            S key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.T">
            <summary>
            T key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.U">
            <summary>
            U key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.V">
            <summary>
            V key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.W">
            <summary>
            W key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.X">
            <summary>
            X key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Y">
            <summary>
            Y key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Z">
            <summary>
            Z key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.LeftWindows">
            <summary>
            Left Windows key (natural keyboard).
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.RightWindows">
            <summary>
            Right Windows key (natural keyboard).
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Application">
            <summary>
            Application key (natural keyboard).
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Sleep">
            <summary>
            Computer sleep key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Numpad0">
            <summary>
            Numeric keypad 0 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Numpad1">
            <summary>
            Numeric keypad 1 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Numpad2">
            <summary>
            Numeric keypad 2 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Numpad3">
            <summary>
            Numeric keypad 3 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Numpad4">
            <summary>
            Numeric keypad 4 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Numpad5">
            <summary>
            Numeric keypad 5 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Numpad6">
            <summary>
            Numeric keypad 6 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Numpad7">
            <summary>
            Numeric keypad 7 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Numpad8">
            <summary>
            Numeric keypad 8 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Numpad9">
            <summary>
            Numeric keypad 9 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Multiply">
            <summary>
            Multiply key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Add">
            <summary>
            Add key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Separator">
            <summary>
            Separator key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Subtract">
            <summary>
            Subtract key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Decimal">
            <summary>
            Decimal key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Divide">
            <summary>
            Divide key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.F1">
            <summary>
            F1 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.F2">
            <summary>
            F2 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.F3">
            <summary>
            F3 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.F4">
            <summary>
            F4 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.F5">
            <summary>
            F5 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.F6">
            <summary>
            F6 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.F7">
            <summary>
            F7 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.F8">
            <summary>
            F8 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.F9">
            <summary>
            F9 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.F10">
            <summary>
            F10 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.F11">
            <summary>
            F11 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.F12">
            <summary>
            F12 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.F13">
            <summary>
            F13 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.F14">
            <summary>
            F14 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.F15">
            <summary>
            F15 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.F16">
            <summary>
            F16 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.F17">
            <summary>
            F17 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.F18">
            <summary>
            F18 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.F19">
            <summary>
            F19 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.F20">
            <summary>
            F20 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.F21">
            <summary>
            F21 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.F22">
            <summary>
            F22 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.F23">
            <summary>
            F23 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.F24">
            <summary>
            F24 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.NumLock">
            <summary>
            NumLock key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.ScrollLock">
            <summary>
            Scroll lock key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.LeftShift">
            <summary>
            Left shift key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.RightShift">
            <summary>
            Right shift key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.LeftControl">
            <summary>
            Left control key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.RightControl">
            <summary>
            Right control key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.LeftMenu">
            <summary>
            Left menu key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.RightMenu">
            <summary>
            Right menu key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.BrowserBack">
            <summary>
            Browser Back key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.BrowserForward">
            <summary>
            Browser Forward key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.BrowserRefresh">
            <summary>
            Browser Refresh key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.BrowserStop">
            <summary>
            Browser Stop key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.BrowserSearch">
            <summary>
            Browser search key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.BrowserFavorites">
            <summary>
            Browser Favorites key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.BrowserHome">
            <summary>
            Browser Start and Home key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.VolumeMute">
            <summary>
            Volumne Mute key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.VolumeDown">
            <summary>
            Volume Down key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.VolumeUp">
            <summary>
            Volumne Up key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.MediaNextTrack">
            <summary>
            Next track key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.MediaPrevTrack">
            <summary>
            Previous track key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.MediaStop">
            <summary>
            Stop media key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.MediaPlayPause">
            <summary>
            Play/pause media key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.LaunchMail">
            <summary>
            Start mail key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.LaunchMediaSelect">
            <summary>
            Select media key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.LaunchApplication1">
            <summary>
            Start application 1 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.LaunchApplication2">
            <summary>
            Start application 2 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.OEM1">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            For the US standard keyboard, the ';:' key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.OEMPlus">
            <summary>
            For any country/region, the '+' key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.OEMComma">
            <summary>
            For any country/region, the ',' key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.OEMMinus">
            <summary>
            For any country/region, the '-' key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.OEMPeriod">
            <summary>
            For any country/region, the '.' key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.OEM2">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            For the US standard keyboard, the '/?' key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.OEM3">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            For the US standard keyboard, the '`~' key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.OEM4">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            For the US standard keyboard, the '[{' key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.OEM5">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            For the US standard keyboard, the '\|' key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.OEM6">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            For the US standard keyboard, the ']}' key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.OEM7">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            For the US standard keyboard, the 'single-quote/double-quote' key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.OEM8">
            <summary>
            Used for miscellaneous characters; it can vary by keyboard.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.OEMAX">
            <summary>
            OEM specific.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.OEM102">
            <summary>
            Either the angle bracket key or the backslash key on the RT 102-key keyboard.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.ICOHelp">
            <summary>
            OEM specific.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.ICO00">
            <summary>
            OEM specific.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.ProcessKey">
            <summary>
            IME process key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.ICOClear">
            <summary>
            OEM specific.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Packet">
            <summary>
            Used to pass Unicode characters as if they were keystrokes.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.OEMReset">
            <summary>
            OEM specific.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.OEMJump">
            <summary>
            OEM specific.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.OEMPA1">
            <summary>
            OEM specific.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.OEMPA2">
            <summary>
            OEM specific.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.OEMPA3">
            <summary>
            OEM specific.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.OEMWSCtrl">
            <summary>
            OEM specific.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.OEMCUSel">
            <summary>
            OEM specific.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.OEMATTN">
            <summary>
            OEM specific.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.OEMFinish">
            <summary>
            OEM specific.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.OEMCopy">
            <summary>
            OEM specific.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.OEMAuto">
            <summary>
            OEM specific.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.OEMENLW">
            <summary>
            OEM specific.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.OEMBackTab">
            <summary>
            OEM specific.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.ATTN">
            <summary>
            Attn key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.CRSel">
            <summary>
            CrSel key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.EXSel">
            <summary>
            ExSel key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.EREOF">
            <summary>
            Erase EOF key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Play">
            <summary>
            Play key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.Zoom">
            <summary>
            Zoom key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.PA1">
            <summary>
            PA1 key.
            </summary>
        </member>
        <member name="F:ConControls.WindowsApi.Types.VirtualKey.OEMClear">
            <summary>
            Clear key.
            </summary>
        </member>
    </members>
</doc>

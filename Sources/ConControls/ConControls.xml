<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ConControls</name>
    </assembly>
    <members>
        <member name="T:ConControls.Controls.BorderStyle">
            <summary>
            Border styles for <see cref="T:ConControls.Controls.IConsoleWindow"/> instances and
            <see cref="T:ConControls.Controls.ConsoleControl"/>s.
            </summary>
        </member>
        <member name="F:ConControls.Controls.BorderStyle.None">
            <summary>
            The control has no border.
            </summary>
        </member>
        <member name="F:ConControls.Controls.BorderStyle.SingleLined">
            <summary>
            The control has a single-lined border.
            </summary>
        </member>
        <member name="F:ConControls.Controls.BorderStyle.DoubleLined">
            <summary>
            The control has a double-lined border.
            </summary>
        </member>
        <member name="F:ConControls.Controls.BorderStyle.Bold">
            <summary>
            The control has a bold-lined border.
            </summary>
        </member>
        <member name="T:ConControls.Controls.ConsoleControl">
            <summary>
            Base class for all console controls.
            </summary>
        </member>
        <member name="E:ConControls.Controls.ConsoleControl.EnabledChanged">
            <summary>
            Raised when the <see cref="P:ConControls.Controls.ConsoleControl.Enabled"/> property has been changed.
            </summary>
        </member>
        <member name="E:ConControls.Controls.ConsoleControl.VisibleChanged">
            <summary>
            The <see cref="P:ConControls.Controls.ConsoleControl.Visible"/> property of the control has been changed.
            </summary>
        </member>
        <member name="E:ConControls.Controls.ConsoleControl.FocusedChanged">
            <summary>
            Raised when the <see cref="P:ConControls.Controls.ConsoleControl.Focused"/> property has been changed.
            </summary>
        </member>
        <member name="E:ConControls.Controls.ConsoleControl.AreaChanged">
            <summary>
            The <see cref="P:ConControls.Controls.ConsoleControl.Area"/> of the control has been changed.
            </summary>
        </member>
        <member name="E:ConControls.Controls.ConsoleControl.ParentChanged">
            <summary>
            The <see cref="P:ConControls.Controls.ConsoleControl.Parent"/> of the control has been changed.
            </summary>
        </member>
        <member name="E:ConControls.Controls.ConsoleControl.ControlCollectionChanged">
            <summary>
            One or more <see cref="T:ConControls.Controls.ConsoleControl"/> instances have been added to or
            removed from the <see cref="P:ConControls.Controls.ConsoleControl.Controls"/> collection of this control.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.Name">
            <summary>
            The name of this control (merely for debug identification).
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.Enabled">
            <summary>
            Gets or sets wether the control is enabled or not.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.Visible">
            <summary>
            Gets or sets wether the control should be visible (drawn) or not.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.Focused">
            <summary>
            Gets or sets wether this control is focused or not.
            Trying to set this to <code>true</code> though <see cref="M:ConControls.Controls.ConsoleControl.CanFocus"/> returns <code>false</code>
            throws an <see cref="T:System.InvalidOperationException"/>.
            </summary>
            <exception cref="T:System.InvalidOperationException"><see cref="P:ConControls.Controls.ConsoleControl.Focused"/> cannot be set to <code>true</code> when <see cref="M:ConControls.Controls.ConsoleControl.CanFocus"/> returns <code>false</code>.</exception>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.CanFocus">
            <summary>
            Determines wether this control can be focused or not.
            </summary>
            <returns><code>true</code> if this control can take focues, <code>false</code> if not.</returns>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.Area">
            <summary>
            The effective total area of the control.
            This is the area the control effectivly fills in the console screen buffer
            after applying layout and including borders.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.Location">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.Size">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.Window">
            <summary>
            The <see cref="T:ConControls.Controls.IConsoleWindow"/> that contains this control.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.Parent">
            <summary>
            The parent <see cref="T:ConControls.Controls.ConsoleControl"/> that contains this control.
            The parent must be contained by the same <see cref="T:ConControls.Controls.IConsoleWindow"/>.
            </summary>
            <exception cref="T:System.InvalidOperationException">The parent is not part of the same <see cref="T:ConControls.Controls.IConsoleWindow"/> or this control is the root element of the window..</exception>
            <exception cref="T:System.ArgumentNullException">The parent is <code>null</code>.</exception>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.Controls">
            <summary>
            The collection of <see cref="T:ConControls.Controls.ConsoleControl"/>s contained by this control.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.DrawingInhibited">
            <summary>
            Determines if the control can currently be redrawn, depending on calls to <see cref="M:ConControls.Controls.ConsoleControl.DeferDrawing"/>
            to this control or its parents.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.ForegroundColor">
            <summary>
            Gets or sets the <see cref="T:System.ConsoleColor"/> to use for foreground drawings.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.FocusedForegroundColor">
            <summary>
            Gets or sets the <see cref="T:System.ConsoleColor"/> to use for foreground drawings when the control is focused.
            If this is <code>null</code>, the <see cref="P:ConControls.Controls.ConsoleControl.ForegroundColor"/> value will be used.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.DisabledForegroundColor">
            <summary>
            Gets or sets the <see cref="T:System.ConsoleColor"/> to use for foreground drawings when the control is disabled.
            If this is <code>null</code>, the <see cref="P:ConControls.Controls.ConsoleControl.ForegroundColor"/> value will be used.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.BackgroundColor">
            <summary>
            Gets or sets the <see cref="T:System.ConsoleColor"/> to use for the background of this control.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.FocusedBackgroundColor">
            <summary>
            Gets or sets the <see cref="T:System.ConsoleColor"/> to use for the background of this control
            when it is focused.
            If this is <code>null</code>, the <see cref="P:ConControls.Controls.ConsoleControl.BackgroundColor"/> value will be used.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.DisabledBackgroundColor">
            <summary>
            Gets or sets the <see cref="T:System.ConsoleColor"/> to use for the background of this control
            when it is disabled.
            If this is <code>null</code>, the <see cref="P:ConControls.Controls.ConsoleControl.BackgroundColor"/> value will be used.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.BorderColor">
            <summary>
            Gets or sets the <see cref="T:System.ConsoleColor"/> to use for the border of this control.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.FocusedBorderColor">
            <summary>
            Gets or sets the <see cref="T:System.ConsoleColor"/> to use for the border of this control
            when it is focused.
            If this is <code>null</code>, the <see cref="P:ConControls.Controls.ConsoleControl.BorderColor"/> value will be used.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.DisabledBorderColor">
            <summary>
            Gets or sets the <see cref="T:System.ConsoleColor"/> to use for the border of this control
            when it is disabled.
            If this is <code>null</code>, the <see cref="P:ConControls.Controls.ConsoleControl.BorderColor"/> value will be used.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.BorderStyle">
            <summary>
            Gets or sets the <see cref="P:ConControls.Controls.ConsoleControl.BorderStyle"/> of this control.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.FocusedBorderStyle">
            <summary>
            Gets or sets the <see cref="P:ConControls.Controls.ConsoleControl.BorderStyle"/> of this control
            when it is focused.
            If this is <code>null</code>, the <see cref="P:ConControls.Controls.ConsoleControl.BorderStyle"/> value will be used.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.DisabledBorderStyle">
            <summary>
            Gets or sets the <see cref="P:ConControls.Controls.ConsoleControl.BorderStyle"/> of this control
            when it is disabled.
            If this is <code>null</code>, the <see cref="P:ConControls.Controls.ConsoleControl.BorderStyle"/> value will be used.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.#ctor(ConControls.Controls.IControlContainer)">
            <summary>
            Initializes an instance of <see cref="T:ConControls.Controls.ConsoleControl"/>.
            </summary>
            <param name="parent">The parent <see cref="T:ConControls.Controls.ConsoleControl"/> this control should be placed on.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="parent"/> is <code>null</code>.</exception>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.CheckDisposed">
            <summary>
            Checks if the <see cref="T:ConControls.Controls.IConsoleWindow"/> containing this control has already
            been disposed of and throws an <see cref="T:System.ObjectDisposedException"/> if it is.
            </summary>
            <exception cref="T:System.ObjectDisposedException">The containing <see cref="T:ConControls.Controls.IConsoleWindow"/> has already been disposed of.</exception>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.Invalidate(System.Boolean)">
            <summary>
            Invalidates this control to trigger redrawing.
            If <paramref name="onlyClientArea"/> is <code>true</code>, only
            the client area (without borders) will be invalidated.
            </summary>
            <param name="onlyClientArea">Set this to <code>true</code> if only the client area should be redrawn.
            This avoids drawing the border and background.</param>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.Draw">
            <summary>
            Redraws the control.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.Draw(ConControls.Controls.Drawing.IConsoleGraphics)">
            <summary>
            Draws the control onto the console screen buffer.
            When overwriting this method, make sure to use the <see cref="P:ConControls.Controls.IConsoleWindow.SynchronizationLock"/>
            to synchronize threads and to call <see cref="M:ConControls.Controls.ConsoleControl.CheckDisposed"/> to check if the window has not yet
            been disposed of.
            The <paramref name="graphics"/> buffer should be flushed by the caller.
            </summary>
            <param name="graphics">An <see cref="T:ConControls.Controls.Drawing.IConsoleGraphics"/> that performs the drawing operations on
            the screen buffer.</param>
            <exception cref="T:System.ObjectDisposedException">The containing <see cref="T:ConControls.Controls.IConsoleWindow"/> has already been disposed of.</exception>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.DrawBackground(ConControls.Controls.Drawing.IConsoleGraphics)">
            <summary>
            Draws the background onto the console screen buffer.
            When overwriting this method, make sure to use the <see cref="P:ConControls.Controls.IConsoleWindow.SynchronizationLock"/>
            to synchronize threads and to call <see cref="M:ConControls.Controls.ConsoleControl.CheckDisposed"/> to check if the window has not yet
            been disposed of.
            The <paramref name="graphics"/> buffer should be flushed by the caller.
            </summary>
            <param name="graphics">An <see cref="T:ConControls.Controls.Drawing.IConsoleGraphics"/> that performs the drawing operations on
            the screen buffer.</param>
            <exception cref="T:System.ObjectDisposedException">The containing <see cref="T:ConControls.Controls.IConsoleWindow"/> has already been disposed of.</exception>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.DrawBorder(ConControls.Controls.Drawing.IConsoleGraphics)">
            <summary>
            Draws the border of the control onto the console screen buffer and returns the remaining client area.
            When overwriting this method, make sure to use the <see cref="P:ConControls.Controls.IConsoleWindow.SynchronizationLock"/>
            to synchronize threads and to call <see cref="M:ConControls.Controls.ConsoleControl.CheckDisposed"/> to check if the window has not yet
            been disposed of.
            The <paramref name="graphics"/> buffer should be flushed by the caller.
            </summary>
            <param name="graphics">An <see cref="T:ConControls.Controls.Drawing.IConsoleGraphics"/> that performs the drawing operations on
            the screen buffer.</param>
            <returns>A <see cref="T:System.Drawing.Rectangle"/> representing the available client area.</returns>
            <exception cref="T:System.ObjectDisposedException">The containing <see cref="T:ConControls.Controls.IConsoleWindow"/> has already been disposed of.</exception>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.DrawClientArea(ConControls.Controls.Drawing.IConsoleGraphics)">
            <summary>
            Draws the client area and child controls onto the console screen buffer.
            When overwriting this method, make sure to use the <see cref="P:ConControls.Controls.IConsoleWindow.SynchronizationLock"/>
            to synchronize threads and to call <see cref="M:ConControls.Controls.ConsoleControl.CheckDisposed"/> to check if the window has not yet
            been disposed of.
            The <paramref name="graphics"/> buffer should be flushed by the caller.
            </summary>
            <param name="graphics">An <see cref="T:ConControls.Controls.Drawing.IConsoleGraphics"/> that performs the drawing operations on
            the screen buffer.</param>
            <exception cref="T:System.ObjectDisposedException">The containing <see cref="T:ConControls.Controls.IConsoleWindow"/> has already been disposed of.</exception>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.DeferDrawing">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.EffectiveForegroundColor">
            <summary>
            Gets the current foreground color based on the state of <see cref="P:ConControls.Controls.ConsoleControl.Enabled"/> and <see cref="P:ConControls.Controls.ConsoleControl.Focused"/> properties.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.EffectiveBackgroundColor">
            <summary>
            Gets the current background color based on the state of <see cref="P:ConControls.Controls.ConsoleControl.Enabled"/> and <see cref="P:ConControls.Controls.ConsoleControl.Focused"/> properties.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.EffectiveBorderColor">
            <summary>
            Gets the current border color based on the state of <see cref="P:ConControls.Controls.ConsoleControl.Enabled"/> and <see cref="P:ConControls.Controls.ConsoleControl.Focused"/> properties.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ConsoleControl.EffectiveBorderStyle">
            <summary>
            Gets the current border style based on the state of <see cref="P:ConControls.Controls.ConsoleControl.Enabled"/> and <see cref="P:ConControls.Controls.ConsoleControl.Focused"/> properties.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.GetClientArea">
            <summary>
            Determines the area of the control that can be used as "client" area.
            This base method e.g. remove the border from the total control area.
            </summary>
            <returns>A <see cref="T:System.Drawing.Rectangle"/> representing the client area of this control.</returns>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnParentChanged">
            <summary>
            Called when the <see cref="P:ConControls.Controls.ConsoleControl.Parent"/> has changed.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnFocusedChanged">
            <summary>
            Called when the <see cref="P:ConControls.Controls.ConsoleControl.Focused"/> property of this control has been changed.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnEnabledChanged">
            <summary>
            Called when the <see cref="P:ConControls.Controls.ConsoleControl.Enabled"/> property of this control has been changed.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnVisibleChanged">
            <summary>
            Called when the <see cref="P:ConControls.Controls.ConsoleControl.Visible"/> property of this control has been changed.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnForegroundColorChanged">
            <summary>
            Called when the <see cref="P:ConControls.Controls.ConsoleControl.ForegroundColor"/>, <see cref="P:ConControls.Controls.ConsoleControl.FocusedForegroundColor"/> or
            <see cref="P:ConControls.Controls.ConsoleControl.DisabledForegroundColor"/> of this control have been changed.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnBackgroundColorChanged">
            <summary>
            Called when the <see cref="P:ConControls.Controls.ConsoleControl.BackgroundColor"/>, <see cref="P:ConControls.Controls.ConsoleControl.FocusedBackgroundColor"/> or
            <see cref="P:ConControls.Controls.ConsoleControl.DisabledBackgroundColor"/> of this control have been changed.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnBorderColorChanged">
            <summary>
            Called when the <see cref="P:ConControls.Controls.ConsoleControl.BorderColor"/>, <see cref="P:ConControls.Controls.ConsoleControl.FocusedBorderColor"/> or
            <see cref="P:ConControls.Controls.ConsoleControl.DisabledBorderColor"/> of this control have been changed.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnBorderStyleChanged">
            <summary>
            Called when the <see cref="P:ConControls.Controls.ConsoleControl.BorderStyle"/>, <see cref="P:ConControls.Controls.ConsoleControl.FocusedBorderStyle"/> or
            <see cref="P:ConControls.Controls.ConsoleControl.DisabledBorderStyle"/> of this control have been changed.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleControl.OnAreaChanged">
            <summary>
            Called when the <see cref="P:ConControls.Controls.ConsoleControl.Area"/> of this control has been changed.
            </summary>
        </member>
        <member name="T:ConControls.Controls.ConsolePanel">
            <summary>
            A console panel control. A plain container
            for other controls.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsolePanel.#ctor(ConControls.Controls.IControlContainer)">
            <inheritdoc />
        </member>
        <member name="T:ConControls.Controls.ConsoleWindow">
            <summary>
            The window for a console UI session.
            </summary>
            <remarks>This window takes control over the console input buffer and
            the current screen buffer to provide UI functionality. Only one window
            may be instantiated at a time. Make sure to dispose of any previously
            instantiated contexts before creating a new one.
            </remarks>
        </member>
        <member name="E:ConControls.Controls.ConsoleWindow.AreaChanged">
            <inheritdoc />
        </member>
        <member name="E:ConControls.Controls.ConsoleWindow.Disposed">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.Window">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.Title">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.Location">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.Size">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.Area">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.MaximumSize">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.ForegroundColor">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.BackgroundColor">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.BorderColor">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.BorderStyle">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.Controls">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.FocusedControl">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.FrameCharSets">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.DrawingInhibited">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.Enabled">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.Visible">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.IsDisposed">
            <inheritdoc />
        </member>
        <member name="P:ConControls.Controls.ConsoleWindow.SynchronizationLock">
            <inheritdoc />
        </member>
        <member name="M:ConControls.Controls.ConsoleWindow.#ctor">
            <summary>
            Opens a new <see cref="T:ConControls.Controls.ConsoleWindow"/>. Only one instance can exist at a time.
            Be sure to dispose of any previously instantiated contexts.
            </summary>
            <exception cref="T:System.InvalidOperationException">A previously instantiated <see cref="T:ConControls.Controls.ConsoleWindow"/> has not yet been disposed of. Only a single window can exist at a time.</exception>
        </member>
        <member name="M:ConControls.Controls.ConsoleWindow.Finalize">
            <summary>
            Cleans up native resources.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleWindow.Dispose">
            <summary>
            Releases any resources used by this <see cref="T:ConControls.Controls.ConsoleWindow"/>.
            </summary>
            <remarks>
            The <see cref="M:ConControls.Controls.ConsoleWindow.Dispose"/> method releases any resources used by this instance.
            It allows to create a new instance (only one <see cref="T:ConControls.Controls.ConsoleWindow"/> instance can be alive
            at a time) and tries to reset the console to the state before the creation of this instacne.</remarks>
        </member>
        <member name="M:ConControls.Controls.ConsoleWindow.GetGraphics">
            <inheritdoc />
        </member>
        <member name="M:ConControls.Controls.ConsoleWindow.Invalidate">
            <summary>
            Invalidates the complete window to trigger a complete redrawing of
            the controls.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ConsoleWindow.DeferDrawing">
            <inheritdoc />
        </member>
        <member name="T:ConControls.Controls.ControlCollection">
            <summary>
            A collection of (child) <see cref="T:ConControls.Controls.ConsoleControl"/>s.
            </summary>
        </member>
        <member name="E:ConControls.Controls.ControlCollection.ControlCollectionChanged">
            <summary>
            Raised when one or more <see cref="T:ConControls.Controls.ConsoleControl"/> instances
            have been added to or removed from this <see cref="T:ConControls.Controls.ControlCollection"/>.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ControlCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:ConControls.Controls.ConsoleControl"/> at the given <paramref name="index"/>.
            </summary>
            <param name="index">The index of the <see cref="T:ConControls.Controls.ConsoleControl"/> in this collection.</param>
            <returns>The <see cref="T:ConControls.Controls.ConsoleControl"/> at the given <paramref name="index"/>.</returns>
            <exception cref="T:System.IndexOutOfRangeException">The <paramref name="index"/> was outside this collection.</exception>
        </member>
        <member name="P:ConControls.Controls.ControlCollection.Count">
            <summary>
            Gets the number of controls in this collection.
            </summary>
        </member>
        <member name="M:ConControls.Controls.ControlCollection.Add(ConControls.Controls.ConsoleControl)">
            <summary>
            Adds the given <paramref name="control"/> to the collection.
            </summary>
            <param name="control">The <see cref="T:ConControls.Controls.ConsoleControl"/> to add.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="control"/> is <code>null</code>.</exception>
            <exception cref="T:System.InvalidOperationException">The <paramref name="control"/> uses a different <see cref="T:ConControls.Controls.IConsoleWindow"/> than this collection.</exception>
        </member>
        <member name="M:ConControls.Controls.ControlCollection.AddRange(ConControls.Controls.ConsoleControl[])">
            <summary>
            Adds a sequence of <see cref="T:ConControls.Controls.ConsoleControl"/> instances to the collection.
            </summary>
            <param name="controlsToAdd">The sequence of <see cref="T:ConControls.Controls.ConsoleControl"/> instances to add.</param>
            <exception cref="T:System.InvalidOperationException">One or more controls in <paramref name="controlsToAdd"/> use a different <see cref="T:ConControls.Controls.IConsoleWindow"/> than this collection.</exception>
        </member>
        <member name="M:ConControls.Controls.ControlCollection.AddRange(System.Collections.Generic.IEnumerable{ConControls.Controls.ConsoleControl})">
            <summary>
            Adds a sequence of <see cref="T:ConControls.Controls.ConsoleControl"/> instances to the collection.
            </summary>
            <param name="controlsToAdd">The sequence of <see cref="T:ConControls.Controls.ConsoleControl"/> instances to add.</param>
            <exception cref="T:System.InvalidOperationException">One or more controls in <paramref name="controlsToAdd"/> use a different <see cref="T:ConControls.Controls.IConsoleWindow"/> than this collection.</exception>
        </member>
        <member name="M:ConControls.Controls.ControlCollection.Remove(ConControls.Controls.ConsoleControl)">
            <summary>
            Removes the given <paramref name="control"/> from the collection.
            </summary>
            <param name="control">The <see cref="T:ConControls.Controls.ConsoleControl"/> to remove.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="control"/> is <code>null</code>.</exception>
        </member>
        <member name="M:ConControls.Controls.ControlCollection.RemoveRange(ConControls.Controls.ConsoleControl[])">
            <summary>
            Removes the given sequence of <see cref="T:ConControls.Controls.ConsoleControl"/> instances
            from the collection.
            </summary>
            <param name="controlsToRemove">The sequence of <see cref="T:ConControls.Controls.ConsoleControl"/> instances
            to remove.</param>
        </member>
        <member name="M:ConControls.Controls.ControlCollection.RemoveRange(System.Collections.Generic.IEnumerable{ConControls.Controls.ConsoleControl})">
            <summary>
            Removes the given sequence of <see cref="T:ConControls.Controls.ConsoleControl"/> instances
            from the collection.
            </summary>
            <param name="controlsToRemove">The sequence of <see cref="T:ConControls.Controls.ConsoleControl"/> instances
            to remove.</param>
        </member>
        <member name="M:ConControls.Controls.ControlCollection.GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can enumerate the <see cref="T:ConControls.Controls.ConsoleControl"/>
            instances contained in this <see cref="T:ConControls.Controls.ControlCollection"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can enumerate the <see cref="T:ConControls.Controls.ConsoleControl"/>
            instances contained in this <see cref="T:ConControls.Controls.ControlCollection"/>.</returns>
        </member>
        <member name="M:ConControls.Controls.ControlCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an <see cref="T:System.Collections.IEnumerator"/> that can enumerate the <see cref="T:ConControls.Controls.ConsoleControl"/>
            instances contained in this <see cref="T:ConControls.Controls.ControlCollection"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator"/> that can enumerate the <see cref="T:ConControls.Controls.ConsoleControl"/>
            instances contained in this <see cref="T:ConControls.Controls.ControlCollection"/>.</returns>
        </member>
        <member name="T:ConControls.Controls.ControlCollectionChangedEventArgs">
            <summary>
            Arguments for the <see cref="E:ConControls.Controls.ControlCollection.ControlCollectionChanged"/> event.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ControlCollectionChangedEventArgs.AddedControls">
            <summary>
            The collection of <see cref="T:ConControls.Controls.ConsoleControl"/> instances that have been added to
            the <see cref="T:ConControls.Controls.ControlCollection"/>.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ControlCollectionChangedEventArgs.RemovedControls">
            <summary>
            The collection of <see cref="T:ConControls.Controls.ConsoleControl"/> instances that have been removed from
            the <see cref="T:ConControls.Controls.ControlCollection"/>.
            </summary>
        </member>
        <member name="T:ConControls.Controls.Drawing.BoldLinedFrameCharSet">
            <summary>
            A <see cref="T:ConControls.Controls.Drawing.FrameCharSet"/> for bold-lined frames.
            </summary>
            <seealso cref="T:ConControls.Controls.Drawing.FrameCharSet"/>
            <seealso cref="T:ConControls.Controls.Drawing.FrameCharSets"/>
            <seealso cref="P:ConControls.Controls.IConsoleWindow.FrameCharSets"/>
        </member>
        <member name="P:ConControls.Controls.Drawing.BoldLinedFrameCharSet.UpperLeft">
            <summary>
            The upper left corner of a bold-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.BoldLinedFrameCharSet.UpperRight">
            <summary>
            The upper right corner of a bold-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.BoldLinedFrameCharSet.LowerLeft">
            <summary>
            The lower left corner of a bold-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.BoldLinedFrameCharSet.LowerRight">
            <summary>
            The lower right corner of a bold-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.BoldLinedFrameCharSet.Horizontal">
            <summary>
            The horizontal line of a bold-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.BoldLinedFrameCharSet.Vertical">
            <summary>
            The vertical line of a bold-lined frame.
            </summary>
        </member>
        <member name="M:ConControls.Controls.Drawing.ConsoleGraphics.DrawBackground(System.ConsoleColor,System.Drawing.Rectangle)">
            <inheritdoc />
        </member>
        <member name="M:ConControls.Controls.Drawing.ConsoleGraphics.DrawBorder(System.ConsoleColor,System.ConsoleColor,ConControls.Controls.BorderStyle,System.Drawing.Rectangle)">
            <inheritdoc />
        </member>
        <member name="M:ConControls.Controls.Drawing.ConsoleGraphics.FillArea(System.ConsoleColor,System.ConsoleColor,System.Char,System.Drawing.Rectangle)">
            <inheritdoc />
        </member>
        <member name="M:ConControls.Controls.Drawing.ConsoleGraphics.Flush">
            <inheritdoc />
        </member>
        <member name="T:ConControls.Controls.Drawing.DoubleLinedFrameCharSet">
            <summary>
            A <see cref="T:ConControls.Controls.Drawing.FrameCharSet"/> for double-lined frames.
            </summary>
            <seealso cref="T:ConControls.Controls.Drawing.FrameCharSet"/>
            <seealso cref="T:ConControls.Controls.Drawing.FrameCharSets"/>
            <seealso cref="P:ConControls.Controls.IConsoleWindow.FrameCharSets"/>
        </member>
        <member name="P:ConControls.Controls.Drawing.DoubleLinedFrameCharSet.UpperLeft">
            <summary>
            The upper left corner of a double-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.DoubleLinedFrameCharSet.UpperRight">
            <summary>
            The upper right corner of a double-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.DoubleLinedFrameCharSet.LowerLeft">
            <summary>
            The lower left corner of a double-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.DoubleLinedFrameCharSet.LowerRight">
            <summary>
            The lower right corner of a double-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.DoubleLinedFrameCharSet.Horizontal">
            <summary>
            The horizontal line of a double-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.DoubleLinedFrameCharSet.Vertical">
            <summary>
            The vertical line of a double-lined frame.
            </summary>
        </member>
        <member name="T:ConControls.Controls.Drawing.FrameCharSet">
            <summary>
            Provides characters for drawing frames.
            </summary>
            <remarks>
            A <see cref="T:ConControls.Controls.Drawing.FrameCharSet"/> represents a character set to use to draw frames
            on the console screen buffer. Each <see cref="T:ConControls.Controls.Drawing.FrameCharSet"/> represents the characters
            used for a <see cref="T:ConControls.Controls.BorderStyle"/>.<br/>
            You can inherit a class from <see cref="T:ConControls.Controls.Drawing.FrameCharSets"/> that provides <see cref="T:ConControls.Controls.Drawing.FrameCharSet"/> instances
            for given <see cref="T:ConControls.Controls.BorderStyle"/> values. This <see cref="T:ConControls.Controls.Drawing.FrameCharSets"/> implementation can then be passed
            to <see cref="P:ConControls.Controls.IConsoleWindow.FrameCharSets">IConsoleWindow.FrameCharSet</see>.
            </remarks>
            <seealso cref="T:ConControls.Controls.Drawing.FrameCharSet"/>
            <seealso cref="P:ConControls.Controls.IConsoleWindow.FrameCharSets"/>
        </member>
        <member name="P:ConControls.Controls.Drawing.FrameCharSet.UpperLeft">
            <summary>
            The upper left corner of a frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.FrameCharSet.UpperRight">
            <summary>
            The upper right corner of a frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.FrameCharSet.LowerLeft">
            <summary>
            The lower left corner of a frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.FrameCharSet.LowerRight">
            <summary>
            The lower right corner of a frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.FrameCharSet.Horizontal">
            <summary>
            The horizontal line of a frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.FrameCharSet.Vertical">
            <summary>
            The vertical line of a frame.
            </summary>
        </member>
        <member name="T:ConControls.Controls.Drawing.FrameCharSets">
            <summary>
            Provides <see cref="T:ConControls.Controls.Drawing.FrameCharSet"/> instances for given <see cref="T:ConControls.Controls.BorderStyle"/> values.
            </summary>
            <remarks>
            You can inherit this class to return your own implementations of <see cref="T:ConControls.Controls.Drawing.FrameCharSet"/>
            classes to change the characters used to draw control frames.
            You can then pass your custom <see cref="T:ConControls.Controls.Drawing.FrameCharSets"/> instance to <see cref="P:ConControls.Controls.IConsoleWindow.FrameCharSets"/>
            to have your custom characters used for frames.<br/>
            This default implementation uses the followig <see cref="T:ConControls.Controls.Drawing.FrameCharSet"/> instances:
            <list type="table">
            <listheader>
            <term><see cref="T:ConControls.Controls.BorderStyle"/></term>
            <description><see cref="T:ConControls.Controls.Drawing.FrameCharSet"/></description>
            </listheader>
            <item>
            <term><see cref="F:ConControls.Controls.BorderStyle.SingleLined"/></term>
            <description><see cref="T:ConControls.Controls.Drawing.SingleLinedFrameCharSet"/></description>
            </item>
            <item>
            <term><see cref="F:ConControls.Controls.BorderStyle.DoubleLined"/></term>
            <description><see cref="T:ConControls.Controls.Drawing.DoubleLinedFrameCharSet"/></description>
            </item>
            <item>
            <term><see cref="F:ConControls.Controls.BorderStyle.Bold"/></term>
            <description><see cref="T:ConControls.Controls.Drawing.BoldLinedFrameCharSet"/></description>
            </item>
            </list>
            </remarks>
            <seealso cref="T:ConControls.Controls.Drawing.FrameCharSet"/>
            <seealso cref="T:ConControls.Controls.Drawing.SingleLinedFrameCharSet"/>
            <seealso cref="T:ConControls.Controls.Drawing.DoubleLinedFrameCharSet"/>
            <seealso cref="T:ConControls.Controls.Drawing.BoldLinedFrameCharSet"/>
            <seealso cref="P:ConControls.Controls.IConsoleWindow.FrameCharSets"/>
        </member>
        <member name="P:ConControls.Controls.Drawing.FrameCharSets.Item(ConControls.Controls.BorderStyle)">
            <summary>
            Gets the <see cref="T:ConControls.Controls.Drawing.FrameCharSet"/> to use to draw a border in the given <paramref name="style"/>.
            </summary>
            <param name="style">The <see cref="T:ConControls.Controls.BorderStyle"/> to get the <see cref="T:ConControls.Controls.Drawing.FrameCharSet"/> for.</param>
            <returns>A <see cref="T:ConControls.Controls.Drawing.FrameCharSet"/> that can provide the characters needed to draw the given <see cref="T:ConControls.Controls.BorderStyle"/>.</returns>
        </member>
        <member name="T:ConControls.Controls.Drawing.IConsoleGraphics">
            <summary>
            Provides methods to draw on the console.
            </summary>
        </member>
        <member name="M:ConControls.Controls.Drawing.IConsoleGraphics.DrawBackground(System.ConsoleColor,System.Drawing.Rectangle)">
            <summary>
            Sets the background <paramref name="color"/> in the specified <paramref name="area"/>.
            The changes are only written to the screen buffer when <see cref="M:ConControls.Controls.Drawing.IConsoleGraphics.Flush"/> is called.
            </summary>
            <param name="color">The <see cref="T:System.ConsoleColor"/> to use for the background.</param>
            <param name="area">The area (in screen buffer coordinates) to fill.</param>
        </member>
        <member name="M:ConControls.Controls.Drawing.IConsoleGraphics.DrawBorder(System.ConsoleColor,System.ConsoleColor,ConControls.Controls.BorderStyle,System.Drawing.Rectangle)">
            <summary>
            Draws a border around (onto the edge of) the specified <paramref name="area"/>.
            </summary>
            <param name="background">The <see cref="T:System.ConsoleColor"/> to use for the background.</param>
            <param name="foreground">The <see cref="T:System.ConsoleColor"/> to use for the border foreground.</param>
            <param name="style">The <see cref="T:ConControls.Controls.BorderStyle"/> to use for the border.</param>
            <param name="area">The area (in screen buffer coordinates) to fill.</param>
        </member>
        <member name="M:ConControls.Controls.Drawing.IConsoleGraphics.FillArea(System.ConsoleColor,System.ConsoleColor,System.Char,System.Drawing.Rectangle)">
            <summary>
            Fills the specified <paramref name="area"/> with the given colors and character.
            </summary>
            <param name="background">The background color to use.</param>
            <param name="foreColor">The foreground color to use.</param>
            <param name="c">The character to use.</param>
            <param name="area">The area to fill.</param>
        </member>
        <member name="M:ConControls.Controls.Drawing.IConsoleGraphics.Flush">
            <summary>
            Flushes the internal buffer to the console screen buffer.
            </summary>
        </member>
        <member name="T:ConControls.Controls.Drawing.NamespaceDoc">
            <summary>
            Provides classes that support the drawing of <see cref="T:ConControls.Controls.ConsoleControl"/>
            instances into the console screen buffer. It also provides default character
            sets to be used to draw control elements.
            </summary>
        </member>
        <member name="T:ConControls.Controls.Drawing.SingleLinedFrameCharSet">
            <summary>
            A <see cref="T:ConControls.Controls.Drawing.FrameCharSet"/> for single-lined frames.
            </summary>
            <seealso cref="T:ConControls.Controls.Drawing.FrameCharSet"/>
            <seealso cref="T:ConControls.Controls.Drawing.FrameCharSets"/>
            <seealso cref="P:ConControls.Controls.IConsoleWindow.FrameCharSets"/>
        </member>
        <member name="P:ConControls.Controls.Drawing.SingleLinedFrameCharSet.UpperLeft">
            <summary>
            The upper left corner of a single-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.SingleLinedFrameCharSet.UpperRight">
            <summary>
            The upper right corner of a single-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.SingleLinedFrameCharSet.LowerLeft">
            <summary>
            The lower left corner of a single-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.SingleLinedFrameCharSet.LowerRight">
            <summary>
            The lower right corner of a single-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.SingleLinedFrameCharSet.Horizontal">
            <summary>
            The horizontal line of a single-lined frame.
            </summary>
        </member>
        <member name="P:ConControls.Controls.Drawing.SingleLinedFrameCharSet.Vertical">
            <summary>
            The vertical line of a single-lined frame.
            </summary>
        </member>
        <member name="T:ConControls.Controls.FocusableControl">
            <summary>
            A <see cref="T:ConControls.Controls.ConsoleControl"/> that can take focus.
            </summary>
        </member>
        <member name="M:ConControls.Controls.FocusableControl.#ctor(ConControls.Controls.IControlContainer)">
            <inheritdoc />
        </member>
        <member name="M:ConControls.Controls.FocusableControl.CanFocus">
            <inheritdoc />
        </member>
        <member name="T:ConControls.Controls.IConsoleWindow">
            <summary>
            Interface to a <see cref="T:ConControls.Controls.ConsoleWindow"/>.
            </summary>
        </member>
        <member name="E:ConControls.Controls.IConsoleWindow.Disposed">
            <summary>
            Raised when this console window is disposed of.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IConsoleWindow.Title">
            <summary>
            The title of the console window.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IConsoleWindow.MaximumSize">
            <summary>
            Gets the maximum size of the console window based on the current font and the size of the display.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IConsoleWindow.ForegroundColor">
            <summary>
            Gets or sets the default foreground color.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IConsoleWindow.BackgroundColor">
            <summary>
            Gets or sets the default background color.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IConsoleWindow.BorderColor">
            <summary>
            Gets or sets the default border color.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IConsoleWindow.BorderStyle">
            <summary>
            Gets or sets the default border style.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IConsoleWindow.FocusedControl">
            <summary>
            Gets or sets the currently focused control on this window.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IConsoleWindow.FrameCharSets">
            <summary>
            The <see cref="P:ConControls.Controls.IConsoleWindow.FrameCharSets"/> provider to use to draw frames.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IConsoleWindow.IsDisposed">
            <summary>
            The window has been disposed of.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IConsoleWindow.SynchronizationLock">
            <summary>
            A synchronization object to synchronize conosle operations.
            </summary>
        </member>
        <member name="M:ConControls.Controls.IConsoleWindow.GetGraphics">
            <summary>
            Provides a <see cref="T:ConControls.Controls.Drawing.IConsoleGraphics"/> to draw on this console window.
            </summary>
            <returns>An <see cref="T:ConControls.Controls.Drawing.IConsoleGraphics"/> iterface to draw on this window.</returns>
        </member>
        <member name="T:ConControls.Controls.IControlContainer">
            <summary>
            An interface for classes that can contain console controls.
            </summary>
        </member>
        <member name="E:ConControls.Controls.IControlContainer.AreaChanged">
            <summary>
            Raised when the <see cref="P:ConControls.Controls.IControlContainer.Area"/> (or <see cref="P:ConControls.Controls.IControlContainer.Location"/> or <see cref="P:ConControls.Controls.IControlContainer.Size"/> have changed.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IControlContainer.Window">
            <summary>
            The main <see cref="T:ConControls.Controls.IConsoleWindow"/> this <see cref="T:ConControls.Controls.IControlContainer"/> belongs to.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IControlContainer.Location">
            <summary>
            The location of this <see cref="T:ConControls.Controls.IControlContainer"/> in character columns and rows
            from the upper left corner of the console screen buffer.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IControlContainer.Size">
            <summary>
            The size of this <see cref="T:ConControls.Controls.IControlContainer"/> in character columns and rows.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IControlContainer.Area">
            <summary>
            A <see cref="T:System.Drawing.Rectangle"/> representing the area (in character columns and rows) this <see cref="T:ConControls.Controls.IControlContainer"/>
            occupies in the console screen buffer.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IControlContainer.Controls">
            <summary>
            The collection of child controls in this <see cref="T:ConControls.Controls.IControlContainer"/>.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IControlContainer.DrawingInhibited">
            <summary>
            Determines if drawing is currently allowed or inhibited via <see cref="M:ConControls.Controls.IControlContainer.DeferDrawing"/>
            or the <see cref="P:ConControls.Controls.IControlContainer.Visible"/> property.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IControlContainer.Enabled">
            <summary>
            Gets wether this control or <see cref="T:ConControls.Controls.IControlContainer"/> is enabled.
            </summary>
        </member>
        <member name="P:ConControls.Controls.IControlContainer.Visible">
            <summary>
            Gets wether this control or <see cref="T:ConControls.Controls.IControlContainer"/> is visible.
            </summary>
        </member>
        <member name="M:ConControls.Controls.IControlContainer.DeferDrawing">
            <summary>
            Defers any drawing operation until the return value has been disposed of again.
            </summary>
            <remarks>Use this to surround a block of code that changes multiple properties of this
            <see cref="T:ConControls.Controls.IControlContainer"/> or its children. This avoids redrawing the control for
            each changed property, and instead redraws the whole container when the returned value
            is disposed.
            <code language="c#">
            ConsoleControl control = ...;
            using(control.DeferDrawing())
            {
                control.ForegroundColor = ConsoleColor.Green;
                control.BackgroundColor = ConsoleColor.Black;
            }
            </code>
            At the end of this block, drawing will be resumed again.
            </remarks>
            <returns>An <see cref="T:System.IDisposable"/> that on calling <see cref="M:System.IDisposable.Dispose"/> releases
            the drawing barriere of this window.</returns>
        </member>
        <member name="T:ConControls.Controls.NamespaceDoc">
            <summary>
            This namespace provides the public console UI control classes
            </summary>
            <remarks>
            This namespace contains the <see cref="T:ConControls.Controls.ConsoleControl"/> base class for console UI controls
            and the <see cref="T:ConControls.Controls.IControlContainer"/> interface.<br/>
            It also provides the <see cref="T:ConControls.Controls.ControlCollection"/> that can keep the child controls of a <see cref="T:ConControls.Controls.IControlContainer"/>.
            </remarks>
        </member>
        <member name="T:ConControls.Controls.ProgressBar">
            <summary>
            A console progress bar control.
            </summary>
        </member>
        <member name="F:ConControls.Controls.ProgressBar.DefaultProgressChar">
            <summary>
            The default progress character used by this progress bar.
            </summary>
        </member>
        <member name="T:ConControls.Controls.ProgressBar.ProgressOrientation">
            <summary>
            The orientation of the progress bar.
            </summary>
        </member>
        <member name="F:ConControls.Controls.ProgressBar.ProgressOrientation.LeftToRight">
            <summary>
            Progress grows from left to right.
            </summary>
        </member>
        <member name="F:ConControls.Controls.ProgressBar.ProgressOrientation.RightToLeft">
            <summary>
            Progress grows from right to left.
            </summary>
        </member>
        <member name="F:ConControls.Controls.ProgressBar.ProgressOrientation.TopToBottom">
            <summary>
            Progress grows from top to bottom.
            </summary>
        </member>
        <member name="F:ConControls.Controls.ProgressBar.ProgressOrientation.BottomToTop">
            <summary>
            Progress grows from bottom to top.
            </summary>
        </member>
        <member name="E:ConControls.Controls.ProgressBar.PercentageChanged">
            <summary>
            Raised when <see cref="P:ConControls.Controls.ProgressBar.Percentage"/> has been changed.
            </summary>
        </member>
        <member name="E:ConControls.Controls.ProgressBar.ProgressCharChanged">
            <summary>
            Raised when <see cref="P:ConControls.Controls.ProgressBar.ProgressChar"/> has been changed.
            </summary>
        </member>
        <member name="E:ConControls.Controls.ProgressBar.OrientationChanged">
            <summary>
            Raised when <see cref="P:ConControls.Controls.ProgressBar.Orientation"/> has been changed.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ProgressBar.Percentage">
            <summary>
            Gets or sets the percentage value of this progress bar.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">The value was less than zero or greater than 1.</exception>
        </member>
        <member name="P:ConControls.Controls.ProgressBar.ProgressChar">
            <summary>
            Gets or sets the progress character used to display the progress bar.
            </summary>
        </member>
        <member name="P:ConControls.Controls.ProgressBar.Orientation">
            <summary>
            Gets or sets the orientation of this progressbar (default is <see cref="F:ConControls.Controls.ProgressBar.ProgressOrientation.LeftToRight"/>).
            </summary>
        </member>
        <member name="M:ConControls.Controls.ProgressBar.#ctor(ConControls.Controls.IControlContainer)">
            <inheritdoc />
        </member>
        <member name="M:ConControls.Controls.ProgressBar.DrawClientArea(ConControls.Controls.Drawing.IConsoleGraphics)">
            <inheritdoc />
        </member>
        <member name="T:ConControls.Properties.Resources">
            <summary>
              Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
            </summary>
        </member>
        <member name="P:ConControls.Properties.Resources.ResourceManager">
            <summary>
              Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
            </summary>
        </member>
        <member name="P:ConControls.Properties.Resources.Culture">
            <summary>
              Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
              Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
            </summary>
        </member>
        <member name="P:ConControls.Properties.Resources.Exception_CannotFocusUnFocusableControl">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die This instance of &quot;{0}&quot; cannot be focused! ähnelt.
            </summary>
        </member>
        <member name="P:ConControls.Properties.Resources.Exception_CanOnlyUseSingleContext">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die There can only be one single console window at a time! Dispose of any existing console window before instantiating a new one. ähnelt.
            </summary>
        </member>
        <member name="P:ConControls.Properties.Resources.Exception_ControlsMustBeContained">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die ConsoleControl instances must be contained in an IConsoleContainer! Please provide a valid parent. ähnelt.
            </summary>
        </member>
        <member name="P:ConControls.Properties.Resources.Exception_DifferentWindow">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The controls cannot be part of different conosle windows! ähnelt.
            </summary>
        </member>
        <member name="P:ConControls.Properties.Resources.Exception_InvalidConsoleColor">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The ConsoleColor &quot;{0}&quot; is not supported! ähnelt.
            </summary>
        </member>
        <member name="P:ConControls.Properties.Resources.Exception_ProgressBarPercentageMustBeNonNegative">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The percentage value of a progress bar cannot be less than zero! ähnelt.
            </summary>
        </member>
        <member name="P:ConControls.Properties.Resources.Exception_ProgressBarPercentageMustNotBeGreaterThan1">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The percentage value of a proress bar cannot be greater than 1! ähnelt.
            </summary>
        </member>
        <member name="P:ConControls.Properties.Resources.Exception_WindowDisposed">
            <summary>
              Sucht eine lokalisierte Zeichenfolge, die The console window used by this control has already been disposed of! ähnelt.
            </summary>
        </member>
        <member name="T:ConControls.WindowsApi.ConsoleErrorHandle">
            <summary>
            A console standard error handle.
            </summary>
        </member>
        <member name="T:ConControls.WindowsApi.ConsoleInputHandle">
            <summary>
            A console input handle.
            </summary>
        </member>
        <member name="T:ConControls.WindowsApi.ConsoleOutputHandle">
            <summary>
            A console output handle.
            </summary>
        </member>
        <member name="M:ConControls.WindowsApi.Types.COORD.ToString">
            <inheritdoc />
        </member>
    </members>
</doc>
